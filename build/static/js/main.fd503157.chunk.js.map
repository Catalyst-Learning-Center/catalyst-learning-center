{"version":3,"sources":["redux/actions/userActions.js","redux/reducers/userReducer.js","redux/actions/loginActions.js","redux/reducers/loginReducer.js","redux/reducers/sessionsReducer.js","redux/reducers/applicationsReducer.js","redux/reducers/locationsReducer.js","redux/reducers/gradesReducer.js","redux/reducers/schoolsReducer.js","redux/reducers/subjectsReducer.js","redux/reducers/tutorsReducer.js","redux/reducers/addNewTutor.js","redux/reducers/alertReducer.js","redux/reducers/index.js","components/LoginPage/ResetPasswordDialog/ResetPasswordDialog.js","components/LoginPage/LoginPage.js","components/RegisterPage/RegisterPage.js","components/TutorNav/TutorNav.js","components/AdminNav/AdminNav.js","components/SelectLocationPage/SelectLocationForm.js","components/SelectLocationPage/SelectLocationPage.js","components/SessionsPage/SelectSubject.js","components/SessionsPage/EndSessionDialog.js","components/SessionsPage/ActiveSessionsTable.js","components/SessionsPage/SelectSchool.js","components/SessionsPage/SelectGrade.js","components/SessionsPage/EditSessionDialog.js","components/SessionsPage/CompletedSessionsTableRow.js","components/SessionsPage/CompletedSessionsTable.js","components/SessionsPage/NewSessionDialog.js","components/SessionsPage/SessionsPage.js","components/AdminDataPage/AdminDataTable/AdminDataTable.js","ReCaptcha/ReCaptcha.js","components/AdminDataPage/AdminDataCharts/AdminDataBarGraph.js","components/AdminDataPage/AdminDataCharts/AdminDataPieChart.js","components/AdminDataPage/AdminDataPage.js","components/ManageApplicationsPage/ManageAppsExpansionPanel.js","components/ManageApplicationsPage/ManageApplicationsPage.js","components/NewApplicationPage/StateSelect.js","components/ManageLocationsPage/AddLocationsDialog/AddLocationsDialog.js","components/ManageLocationsPage/EditLocationsDialog/EditLocationsDialog.js","components/ManageLocationsPage/LocationExpansionPanel/LocationExpansionPanel.js","components/AlertDialog/AlertDialog.js","components/ManageLocationsPage/ManageLocationsPage.js","components/ManageTutorsPage/RemoveTutorDialog.js","components/ManageTutorsPage/EditTutorDialog.js","components/ManageTutorsPage/TutorListItem.js","components/ManageTutorsPage/TutorsList.js","components/ManageTutorsPage/ManageTutorsPage.js","components/AddTutorPage/AddTutorConfirmation.js","components/AddTutorPage/AddTutorPage.js","components/NewApplicationPage/NewApplicationHeader.js","components/NewApplicationPage/SubmitDialog.js","components/NewApplicationPage/SubmitFailedDialog.js","components/NewApplicationPage/NewApplicationPage.js","ReCaptcha/loadReCaptcha.js","App.js","redux/sagas/userSaga.js","redux/requests/userRequests.js","redux/requests/loginRequests.js","redux/sagas/loginSaga.js","redux/sagas/sessionsSaga.js","redux/sagas/locationsSaga.js","redux/sagas/gradesSaga.js","redux/sagas/schoolsSaga.js","redux/sagas/subjectsSaga.js","redux/sagas/tutorsSaga.js","redux/sagas/index.js","index.js"],"names":["USER_ACTIONS","FETCH_USER","SET_USER","UNSET_USER","REQUEST_START","REQUEST_DONE","LOGOUT","USER_FETCH_FAILED","combineReducers","id","state","arguments","length","undefined","action","type","user","userName","username","isLoading","permissions","LOGIN_ACTIONS","LOGIN","CLEAR_LOGIN_ERROR","LOGIN_REQUEST_DONE","LOGIN_FAILED","LOGIN_FAILED_NO_CODE","INPUT_ERROR","triggerLogin","password","payload","triggerLogout","message","location","grade","school","subject","activeSessions","completedSessions","applicationToDisplay","locations","Object","toConsumableArray","concat","filter","editedLocation","grades","schools","subjects","tutors","newTutorToAdd","objectSpread","defineProperty","name","value","user_first_name","user_last_name","user_address","user_city","user_state","user_zipcode","user_cell_phone","user_email","user_qualifications","user_experience","user_age_group","user_subjects","user_location","resume","newTutorLocations","newTutorSubjects","defaultState","open","dispatch","title","content","alert","store","login","sessions","pendingApplications","ResetPasswordDialog","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","handleChange","e","setState","userInfoEmail","target","handleUserInfoRequest","axios","method","url","data","then","response","console","log","handlePasswordResetClose","catch","error","emailError","errorText","react_default","a","createElement","style","color","index_es","openResetDialog","aria-labelledby","autoFocus","margin","label","onChange","fullWidth","onClick","variant","Component","LoginPage","event","preventDefault","handleInputChangeFor","propertyName","handlePasswordResetOpen","handleClickShowPassword","showPassword","history","push","className","role","src","renderAlert","onSubmit","Grid_default","container","item","xs","FormControl_default","width","marginBottom","Input_default","placeholder","inputProps","aria-label","fullwidth","endAdornment","InputAdornment_default","position","IconButton_default","VisibilityOff_default","Visibility_default","Button_default","size","Link","to","LoginPage_ResetPasswordDialog_ResetPasswordDialog","connect","RegisterPage","registerUser","body","post","status","htmlFor","TutorNav","logout","collapse","isWideEnough","bind","assertThisInitialized","mdbreact","light","expand","scrolling","tag","isOpen","navbar","right","backgroundColor","AdminNav","getPendingApplications","count","startTutoring","pendingItem","activeStyle","Badge_default","badgeContent","dark","left","React","SelectLocationDropdown","componentDidMount","getLocations","selectedLocation","handleSubmit","handleClose","InputLabel_default","shrink","Select_default","input","MenuItem_default","map","key","location_name","FormHelperText_default","marginLeft","marginTop","Dialog_default","onClose","DialogContent_default","DialogContentText_default","DialogActions_default","SelectLocationPage","nav","components_TutorNav_TutorNav","components_AdminNav_AdminNav","SelectLocationForm","SelectSubject","getSubjects","overtime","minWidth","defaultValue","selectedSubject","EndSessionDialog","endSession","topic","end_time","endTime","handleClickOpen","handleInputChange","handleEndTime","selectSubject","stop","Stop_default","float","WarningOutlined_default","today","Date","dd","getDate","mm","getMonth","yyyy","getFullYear","moment","date","format","start_time","TextField_default","SessionsPage_SelectSubject","DialogTitle_default","required","ActiveSessionsTable","getActiveSessions","Paper_default","Table_default","TableHead_default","TableRow_default","TableCell_default","TableBody_default","session","component","scope","student_name","school_name","grade_level","SessionsPage_EndSessionDialog","session_date","SelectSchool","getSchools","class","react_select_esm","options","selectedSchool","SelectGrade","getGrades","selectedGrade","EditSessionDialog","editedSession","topics","time","school_id","grade_id","subjects_id","changeSession","calculateNewTime","add","_d","handleConfirm","dataToSend","edit","EditOutlined_default","SessionsPage_SelectSchool","SessionsPage_SelectGrade","CompletedSessionsTableRow","n","hours","minutes","hover","tabIndex","padding","SessionsPage_EditSessionDialog","desc","b","orderBy","CompletedSessionsTable","page","rowsPerPage","getCompletedSessions","handleChangePage","handleChangeRowsPerPage","order","_this$state","emptyRows","Math","min","array","cmp","stabilizedThis","el","index","sort","stableSort","slice","SessionsPage_CompletedSessionsTableRow","height","colSpan","TablePagination_default","backIconButtonProps","nextIconButtonProps","onChangePage","onChangeRowsPerPage","NewSessionDialog","handleSessionStart","SessionsPage","LocalLibraryOutlined_default","top","fontSize","marginRight","SessionsPage_NewSessionDialog","SessionsPage_ActiveSessionsTable","SessionsPage_CompletedSessionsTable","rows","numeric","disablePadding","AdminDataHeader","createSortHandler","property","onRequestSort","_this2","_this$props","row","sortDirection","Tooltip_default","placement","enterDelay","TableSortLabel_default","active","direction","AdminTableToolbar","numSelected","classes","filteredData","Toolbar_default","classNames","root","highlight","Typography_default","spacer","actions","align","react_csv","headers","GetApp_default","withStyles","theme","paddingRight","spacing","unit","palette","secondary","main","lighten","text","primary","flex","display","readyCheck","AdminDataTable","selected","datasets","years","locationFilter","subjectFilter","schoolFilter","gradeFilter","yearFilter","getYearData","_this3","setData","dataLabels","sortedData","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","Symbol","iterator","next","done","currentYear","year","schoolYear","subtract","err","return","getSessionData","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","toString","handleRequestSort","isSelected","indexOf","handleFilterChange","filterData","toLowerCase","includes","_this4","AdminDataTable_AdminTableToolbar","tableWrapper","table","AdminDataTable_AdminDataHeader","rowCount","getSorting","i","backiconbuttonprop","AdminExport","overflowX","AdminDataBarGraph","handleLocationChange","_ref","asyncToGenerator","regenerator_default","mark","_callee","wrap","_context","prev","_x","apply","datasetLibraryOne","datasetLibraryTwo","chartData","labels","getRandomColor","floor","random","react_chartjs_2_es","fontsize","legend","scales","xAxes","scaleLabel","labelString","distribution","yAxes","ticks","beginAtZero","AdminDataPieChart","handleLegendShow","showLegend","toggleButton","zoom","ZoomInOutlined_default","minify","ZoomOutOutlined_default","boxWidth","justify","alignItems","JSON","stringify","AdminDataPage","dataset","AdminDataCharts_AdminDataPieChart","AdminDataCharts_AdminDataBarGraph","AdminDataPage_AdminDataTable_AdminDataTable","background","borderRadius","border","paddingTop","boxShadow","ManageAppsExpansionPanel","getApplicationsLocations","getApplicationsSubjects","handleExpansion","handleConfirmRemoveDialogueOpen","confirmRemoveDialogue","handleConfirmRemoveDialogueClose","handleRemoveDialogueOpen","removeDialogue","handleRemoveDialogueClose","acceptApplication","String","removeApplication","_React$createElement","remove","DeleteTwoTone_default","check","CheckCircleOutlined_default","person","PersonOutlined_default","ExpansionPanel_default","expanded","ExpansionPanelSummary_default","expandIcon","ExpandMore_default","applicant_first_name","applicant_last_name","ExpansionPanelDetails_default","applicant_address","applicant_city","applicant_state","applicant_zipcode","applicant_email","applicant_cell_phone","applicant_qualifications","applicant_experience","applicant_age_group","listStyleType","aria-describedby","justifyContent","ManageApplicationsPage","ManageApplicationsPage_ManageAppsExpansionPanel","StateSelect","handleApplicantStateChange","states","defaultInputValue","AddLocationsDialog","handleStateDropDownChange","locationToAdd","location_state","saveLocation","addLocationClose","handleAlertOpen","handleAlertClose","handleAddLocationChange","location_address","location_city","location_zipcode","location_phone","Fragment","NewApplicationPage_StateSelect","EditLocationsDialog","openDialog","handleSaveChange","locationToEdit","handleEditAlertOpen","handleEditAlertClose","LocationExpansionPanel","handleEditClick","handleEditDialogOpen","toggleLocationStatus","deactive","LockOutlined_default","LockOpenOutlined_default","RoomOutlined_default","ManageLocationsPage_EditLocationsDialog_EditLocationsDialog","AlertDialog","ManageLocationsPage","addLocationOpen","addDialogOpen","editDialogOpen","handleEditDialogClose","handleEditChange","ManageLocationsPage_AddLocationsDialog_AddLocationsDialog","ManageLocationsPage_LocationExpansionPanel_LocationExpansionPanel","components_AlertDialog_AlertDialog","RemoveTutorDialog","handleOpen","handleConfirmationOpen","confirmationOpen","handleConfirmationClose","handleTutorDelete","tutor","user_id","EditTutorDialog","getTutorLocations","getTutorSubjects","Axios","selectedLocations","selectedSubjects","handleStateChange","editedTutor","handleUserStateChange","handleSave","handleSubjectCheckbox","isChecked","handleLocationsCheckbox","Checkbox_default","checked","TutorListItem","toggleAdminStatus","button","admin","transfer","BlockOutlined_default","promote","VerifiedUserRounded_default","join_id","ManageTutorsPage_EditTutorDialog","ManageTutorsPage_RemoveTutorDialog","TutorsList","getTutors","ManageTutorsPage_TutorListItem","ManageTutorsPage","newTutor","ManageTutorsPage_TutorsList","AddTutorConfirmation","AddTutorPage","handleApplicationChange","handleNewTutorForm","applicant_subjects","applicant_locations","FormGroup_default","FormControlLabel_default","control","multiline","alignContent","AddTutorPage_AddTutorConfirmation","NewApplicationHeader","href","SubmitDialog","handleDialogClose","SubmitFailedDialog","defaultProps","elementID","onloadCallback","onloadCallbackName","verifyCallback","verifyCallbackName","expiredCallback","expiredCallbackName","render","tabindex","hl","badge","isReady","window","grecaptcha","ReCaptcha","_renderGrecaptcha","reset","execute","ready","widget","setInterval","_updateReadyState","prevProps","prevState","clearInterval","_this$state2","sitekey","callback","expired-callback","data-onloadcallbackname","data-verifycallbackname","data-sitekey","data-theme","data-type","data-size","data-badge","data-tabindex","NewApplicationPage","captcha","config","cloud_name","api_key","process","RECAPTCHA_API_KEY","api_secret","RECAPTCHA_API_SECRET","upload_preset","openCloudinary","cloudinary","openUploadWidget","result","cloudinaryUrl","application","easyFunction","postApplication","recaptchaToken","handleSubmitDialogOpen","submitFailedDialogOpen","submitDialogOpen","handleSubmitDialogClose","submitFailedDialogClose","onLoadRecaptcha","resumePdf","PictureAsPdf_default","NewApplicationPage_NewApplicationHeader","flexDirection","src_ReCaptcha_ReCaptcha","ref","NewApplicationPage_SubmitDialog","NewApplicationPage_SubmitFailedDialog","loadReCaptcha","script","document","appendChild","createMuiTheme","typography","useNextVariants","App","styles","HashRouter","Switch","Redirect","exact","from","Route","path","fetchUser","userSaga","put","get","Content-Type","withCredentials","sent","t0","_marked","_context2","takeLatest","_marked2","callLogin","loginUser","logoutUser","loginSaga","loginSaga_marked","loginSaga_marked2","_context3","_marked3","postNewSession","editSession","sessionsSaga","activeSessionsResponse","responseAction","sessionsSaga_marked","completedSessionsResponse","sessionsSaga_marked2","sessionsSaga_marked3","_context4","_marked4","_context5","_marked5","_context6","takeEvery","_marked6","saveLocations","editLocations","toggleLocation","locationsSaga","locationsSaga_marked","actionPayload","_actionPayload","locationsSaga_marked2","_actionPayload2","locationsSaga_marked3","locationsSaga_marked4","locationsSaga_marked5","gradesSaga","gradesResponse","responseActoin","gradesSaga_marked","gradesSaga_marked2","schoolsSaga","schoolsResponse","schoolsSaga_marked","schoolsSaga_marked2","subjectsSaga","subjectsResponse","subjectsSaga_marked","subjectsSaga_marked2","toggleAdmin","deleteTutor","editTutor","editTutorSubjects","editTutorLocations","tutorsSaga","tutorsResponse","tutorsSaga_marked","tutorsSaga_marked2","tutorsSaga_marked3","tutorsSaga_marked4","tutorsSaga_marked5","tutorsSaga_marked6","_context7","_marked7","rootSaga","all","sagas_marked","middlewares","sagaMiddleware","createSagaMiddleware","createStore","reducer","applyMiddleware","run","ReactDOM","react_redux_es","src_App","getElementById"],"mappings":"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","file":"static/js/main.fd503157.chunk.js","sourcesContent":["\n//String Constants are a good way to keep your code DRY\n//Imagine changing an action everywhere its used. Gross!\n//This way we only need to change it one place.\nexport const USER_ACTIONS = {\n  FETCH_USER: 'FETCH_USER',\n  SET_USER: 'SET_USER_ACTION',\n  UNSET_USER: 'UNSET_USER_ACTION',\n  REQUEST_START: 'REQUEST_START_USER_ACTION',\n  REQUEST_DONE: 'REQUEST_DONE_USER_ACTION',\n  LOGOUT: 'LOGOUT',\n  USER_FETCH_FAILED: 'USER_FETCH_FAILED',\n};\n\n\n","import { combineReducers } from 'redux';\nimport { USER_ACTIONS } from '../actions/userActions';\n\n//id holds onto the user.id from passport/database\nconst id = (state = null, action) => {\n  switch (action.type) {\n    case USER_ACTIONS.SET_USER:\n      return action.user.id || state;\n    case USER_ACTIONS.UNSET_USER:\n      return null;\n    default:\n      return state;\n  }\n};\n\n//userName holds onto the user.username from passport/database\nconst userName = (state = null, action) => {\n  switch (action.type) {\n    case USER_ACTIONS.SET_USER:\n      return action.user.username || state;\n    case USER_ACTIONS.UNSET_USER:\n      return null;\n    default:\n      return state;\n  }\n};\n\nconst permissions = (state = null, action) => {\n  switch (action.type) {\n    case USER_ACTIONS.SET_USER:\n      return action.user.permissions || state;\n    case USER_ACTIONS.UNSET_USER:\n      return null;\n    default:\n      return state;\n  }\n}\n\n//isLoading holds the boolean that tracks whether or not this async call is out in the internet or not\nconst isLoading = (state = false, action) => {\n  switch (action.type) {\n    case USER_ACTIONS.REQUEST_START:\n      return true;\n    case USER_ACTIONS.REQUEST_DONE:\n      return false;\n    default:\n      return state;\n  }\n};\n\n//make one object that has keys id, username, isLoading\nexport default combineReducers({\n  id,\n  userName,\n  isLoading,\n  permissions\n});\n","//String Constants are a good way to keep your code DRY\n//Imagine changing an action everywhere its used. Gross!\n//This way we only need to change it one place.\nexport const LOGIN_ACTIONS = {\n  LOGIN: 'LOGIN',\n  CLEAR_LOGIN_ERROR: 'CLEAR_LOGIN_ERROR',\n  REQUEST_START: 'REQUEST_START',\n  LOGIN_REQUEST_DONE: 'LOGIN_REQUEST_DONE',\n  LOGIN_FAILED: 'LOGIN_FAILED',\n  LOGIN_FAILED_NO_CODE: 'LOGIN_FAILED_NO_CODE',\n  INPUT_ERROR: 'INPUT_ERROR',\n  LOGOUT: 'LOGOUT',\n};\n\n//These are functions - each returns an action.\n//You could call one an action creator.\nexport const clearError = () => ({\n  type: LOGIN_ACTIONS.CLEAR_LOGIN_ERROR,\n});\n\n\nexport const triggerLogin = (username, password) => ({\n  type: LOGIN_ACTIONS.LOGIN,\n  payload: {\n    username,\n    password,\n  },\n});\n\nexport const triggerLogout = () => ({\n  type: LOGIN_ACTIONS.LOGOUT,\n});\n\nexport function formError() {\n  return {\n    type: LOGIN_ACTIONS.INPUT_ERROR,\n    payload: 'Enter your username and password!',\n  };\n}\n","import { combineReducers } from 'redux';\nimport { LOGIN_ACTIONS } from '../actions/loginActions';\n\n//message holds the string that will display on the login screen if there's an error\nconst message = (state = '', action) => {\n  switch (action.type) {\n    case LOGIN_ACTIONS.CLEAR_LOGIN_ERROR:\n      return '';\n    case LOGIN_ACTIONS.LOGIN_FAILED:\n      return 'Ooops! The username and password didn\\'t match. Try again!';\n    case LOGIN_ACTIONS.LOGIN_FAILED_NO_CODE:\n      return 'Ooops! Something went wrong! Is the server running?';\n    case LOGIN_ACTIONS.INPUT_ERROR:\n      return action.payload;\n    default:\n      return state;\n  }\n};\n\n//isLoading holds the boolean that tracks whether or not this async call is out in the internet or not\nconst isLoading = (state = false, action) => {\n  switch (action.type) {\n    case LOGIN_ACTIONS.REQUEST_START:\n      return true;\n    case LOGIN_ACTIONS.REQUEST_DONE:\n      return false;\n    default:\n      return state;\n  }\n};\n\n//make one object that has keys message, isLoading\nexport default combineReducers({\n  isLoading,\n  message,\n});\n","import { combineReducers } from 'redux';\n\nconst location = (state = null, action) => {\n  switch (action.type) {\n    case 'SET_SESSION_LOCATION':\n      return action.payload || state;\n    default:\n      return state;\n  }\n};\n\nconst grade = (state = null, action) => {\n  switch (action.type) {\n    case 'SET_SESSION_GRADE':\n      return action.payload || state;\n    case 'RESET_SESSION':\n      return null;\n    default:\n      return state;\n  }\n};\n\nconst school = (state = null, action) => {\n  switch (action.type) {\n    case 'SET_SESSION_SCHOOL':\n      return action.payload || state;\n    case 'RESET_SESSION':\n      return null;\n    default:\n      return state;\n  }\n};\n\nconst subject = (state = null, action) => {\n  switch (action.type) {\n    case 'SET_SESSION_SUBJECT':\n      return action.payload || state;\n    case 'RESET_SESSION':\n      return null;\n    default:\n      return state;\n  }\n};\n\nconst activeSessions = (state = [], action) => {\n  switch (action.type) {\n    case 'SET_ACTIVE_SESSIONS':\n      return action.payload || state;\n    default:\n      return state;\n  }\n};\n\nconst completedSessions = (state = [], action) => {\n  switch (action.type) {\n    case 'SET_COMPLETED_SESSIONS':\n      return action.payload || state;\n    default:\n      return state;\n  }\n};\n\n//make one object that has keys id, username, isLoading\nexport default combineReducers({\n  location,\n  grade,\n  school,\n  subject,\n  activeSessions,\n  completedSessions\n});","const applicationToDisplay = (state=[], action) => {\n    if (action.type === 'DISPLAY_APPLICATIONS') {\n        return action.payload;\n    }\n    return state\n}\nexport default applicationToDisplay;","import { combineReducers } from 'redux';\n\nconst locations = (state = [], action) => {\n    switch (action.type) {\n        case 'SET_LOCATIONS':\n            return action.payload || state;\n        case 'ADD_LOCATIONS':\n            return [...state, action.payload];\n        case 'REMOVE_LOCATIONS':\n            return state.filter((id) => id !== action.payload);\n        default:\n            return state;\n    }\n};\n\nconst editedLocation = (state = {}, action) => {\n    switch (action.type) {\n        case 'EDIT_LOCATION':\n            return action.payload || state;\n        default:\n            return state;\n    }\n};\n\n\nexport default combineReducers({\n    locations,\n    editedLocation\n  });","const grades = (state = [], action) => {\n    switch (action.type) {\n        case 'SET_GRADES':\n            return action.payload || state;\n        default:\n            return state;\n    }\n};\n\nexport default grades;","const schools = (state = [], action) => {\n    switch (action.type) {\n        case 'SET_SCHOOLS':\n            return action.payload || state;\n        default:\n            return state;\n    }\n};\n\nexport default schools;","const subjects = (state = [], action) => {\n    switch (action.type) {\n        case 'SET_SUBJECTS':\n            return action.payload || state;\n        case 'ADD_SUBJECT':\n            return [...state, action.payload];\n        case 'REMOVE_SUBJECT':\n            return state.filter((id) => id !== action.payload);\n        default:\n            return state;\n    }\n};\n\nexport default subjects;","const tutors = (state = [], action) => {\n    switch (action.type) {\n        case 'SET_TUTORS':\n            return action.payload || state;\n        default:\n            return state;\n    }\n};\n\nexport default tutors;","import { combineReducers } from 'redux';\n\nconst newTutorToAdd = (state={}, action) => {\n    if (action.type === 'EDIT_TUTOR') {\n        return {...state, [action.payload.name]: action.payload.value}\n    } else if (action.type === 'ADD_TUTOR') {\n        return action.payload\n    } else if (action.type === 'RESET_STATE') {\n        return (state = {\n            user_first_name: '',\n            user_last_name: '',\n            user_address: '',\n            user_city: '',\n            user_state: '',\n            user_zipcode: '',\n            user_cell_phone: '',\n            user_email: '',\n            user_qualifications: '',\n            user_experience: '',\n            user_age_group: '',\n            user_subjects: '',\n            user_location: '',\n            resume: '',\n            username: '',\n            password: '',\n        });\n    }\n    return state\n}\n\nconst newTutorSubjects = (state=[], action) => {\n    if (action.type === 'ADD_TUTOR_SUBJECTS') {\n        return action.payload;\n    } else if (action.type === 'CHECK_SUBJECT') {\n        return [...state, action.payload];\n    } else if (action.type === 'UNCHECK_SUBJECT') {\n        return state.filter((id) => id !== action.payload);\n    }\n    return state;\n}\n\nconst newTutorLocations = (state=[], action) => {\n    if (action.type === 'ADD_TUTOR_LOCATIONS') {\n        return action.payload;\n    }else if (action.type === 'CHECK_LOCATION') {\n        return [...state, action.payload];\n    } else if (action.type === 'UNCHECK_LOCATION') {\n        return state.filter((id) => id !== action.payload);\n    }\n    return state;\n}\n\nexport default combineReducers({\n    newTutorToAdd,\n    newTutorLocations,\n    newTutorSubjects,\n})","const defaultState = {\n    open: false,\n    dispatch: '',\n    title: '',\n    content: '',\n}\n\nconst alert = (state = defaultState, action) => {\n    if (action.type === 'OPEN_ALERT') {\n        return action.payload;\n    } else if (action.type === 'CLOSE_ALERT') {\n        return defaultState;\n    }\n    return state\n}\n\nexport default alert;","import { combineReducers } from 'redux';\nimport user from './userReducer';\nimport login from './loginReducer';\nimport sessions from './sessionsReducer';\nimport pendingApplications from './applicationsReducer';\nimport locations from './locationsReducer';\nimport grades from './gradesReducer';\nimport schools from './schoolsReducer';\nimport subjects from './subjectsReducer';\nimport tutors from './tutorsReducer';\nimport newTutorToAdd from './addNewTutor';\nimport alert from './alertReducer';\n\n//Lets make a bigger object for our store, with the objects from our reducers.\n//This is why we get this.props.reduxStore.user.isLoading\nconst store = combineReducers({\n  user,\n  login,\n  sessions,\n  pendingApplications,\n  locations,\n  grades,\n  schools,\n  subjects,\n  tutors,\n  newTutorToAdd,\n  alert\n});\n\nexport default store;\n","import React, { Component } from 'react'\nimport { Button, TextField, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle } from '@material-ui/core';\nimport axios from 'axios';\n\nclass ResetPasswordDialog extends Component {\n    constructor(props){\n        super(props);\n        this.state = {\n            userInfoEmail: '',\n            emailError: null,\n        }\n    }\n\n    handleChange = (e) => {\n        this.setState({\n            userInfoEmail: e.target.value\n        });\n    }\n\n    handleUserInfoRequest = () => {\n        axios({\n            method: 'POST',\n            url: '/api/user/forgot',\n            data: {userInfoEmail: this.state.userInfoEmail}\n        }).then((response)=>{\n            console.log(response.data);\n            this.props.handlePasswordResetClose();\n        }).catch((error)=>{\n            console.log('error', error);\n            if (error) {\n                this.setState({\n                    emailError: true\n                })\n            }\n        });\n    }\n\n\n\n\n    render() {\n        let errorText = null\n        if (this.state.emailError){\n            errorText = <p style={{ color: 'red' }}>We could not find user information for that email address</p>\n        }\n        return (\n            <Dialog\n                open={this.props.openResetDialog}\n                aria-labelledby=\"reset-password-dialog\"\n            >\n                <DialogTitle id=\"reset-password-dialog\">Request User Information</DialogTitle>\n                <DialogContent>\n                    <DialogContentText>\n                        Please enter your email address and you will receive an email with your user information\n                        \n                </DialogContentText>\n                    <TextField\n                        autoFocus\n                        margin=\"dense\"\n                        id=\"name\"\n                        label=\"Email Address\"\n                        type=\"email\"\n                        value={this.state.userInfoEmail}\n                        onChange={this.handleChange}\n                        fullWidth\n                    />\n                    {errorText}\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.props.handlePasswordResetClose} color=\"primary\">\n                        Cancel\n                     </Button>\n                    <Button variant=\"contained\" onClick={this.handleUserInfoRequest} color=\"primary\">\n                        Request Password Reset\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        )\n    }\n}\n\nexport default ResetPasswordDialog;","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport './LoginPage.css';\n\n// action imports\nimport { triggerLogin, formError, clearError } from '../../redux/actions/loginActions';\nimport { USER_ACTIONS } from '../../redux/actions/userActions';\n\nimport ResetPasswordDialog from './ResetPasswordDialog/ResetPasswordDialog';\n\nimport Input from '@material-ui/core/Input';\nimport InputAdornment from '@material-ui/core/InputAdornment';\nimport Visibility from '@material-ui/icons/Visibility';\nimport VisibilityOff from '@material-ui/icons/VisibilityOff';\nimport IconButton from '@material-ui/core/IconButton';\nimport Button from '@material-ui/core/Button';\nimport FormControl from '@material-ui/core/FormControl';\nimport Grid from '@material-ui/core/Grid';\n\n\nconst mapStateToProps = state => ({\n  user: state.user,\n  login: state.login,\n});\n\nclass LoginPage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      username: '',\n      password: '',\n      openResetDialog: false,\n      showPassword: false,\n    };\n  }\n\n\n  componentDidMount() {\n    // starts request for server to check that we are logged in\n    this.props.dispatch({ type: USER_ACTIONS.FETCH_USER });\n    this.props.dispatch(clearError());\n  }\n\n  componentDidUpdate() {\n    // if we have a response from the server and the user is logged in, redirect to the /user URL\n    if (!this.props.user.isLoading && this.props.user.userName !== null && this.props.user.permissions === 1) {\n      this.props.history.push('/select-location');\n    } else if (!this.props.user.isLoading && this.props.user.userName !== null && this.props.user.permissions === 2) {\n      this.props.history.push('/admin-data');\n    }\n  }\n\n  login = (event) => {\n    event.preventDefault();\n\n    if (this.state.username === '' || this.state.password === '') {\n      this.props.dispatch(formError());\n    } else {\n      this.props.dispatch(triggerLogin(this.state.username, this.state.password));\n    }\n  }\n\n  handleInputChangeFor = propertyName => (event) => {\n    this.setState({\n      [propertyName]: event.target.value,\n    });\n  }\n\n  handlePasswordResetOpen = () => {\n    this.setState({\n      openResetDialog: true\n    })\n  }\n\n  handlePasswordResetClose = () => {\n    this.setState({\n      openResetDialog: false\n    })\n  }\n\n  handleClickShowPassword = () => {\n    this.setState(state => ({ showPassword: !state.showPassword }));\n  };\n\n\n  renderAlert() {\n    if (this.props.login.message !== '') {\n      return (\n        <h2\n          className=\"alert\"\n          role=\"alert\"\n        >\n          {this.props.login.message}\n        </h2>\n      );\n    }\n    return (<span />);\n  }\n\n  render() {\n    return (\n      <div className=\"login-view-container\">\n        <img className=\"main-logo\" src=\"/images/catalyst2.png\" />\n        <div className=\"login-container\">\n          {this.renderAlert()}\n          <form onSubmit={this.login}>\n            <h1>Login</h1>\n            <Grid container>\n              <Grid item xs={12}>\n                <FormControl style={{ width: '80%', marginBottom: '10px' }}>\n                  <Input\n                    name=\"username\"\n                    value={this.state.username}\n                    onChange={this.handleInputChangeFor('username')}\n                    placeholder=\"Email\"\n                    inputProps={{\n                      'aria-label': 'Email',\n                    }}\n                    fullwidth\n                  />\n                </FormControl>\n                <br />\n                <FormControl style={{ width: '80%' }}>\n                  <Input\n                    fullWidth\n                    id=\"password\"\n                    placeholder=\"Password\"\n                    type={this.state.showPassword ? 'text' : 'password'}\n                    value={this.state.password}\n                    onChange={this.handleInputChangeFor('password')}\n                    inputProps={{\n                      'aria-label': 'Password',\n                    }}\n                    endAdornment={\n                      <InputAdornment position=\"end\">\n                        <IconButton\n                          aria-label=\"Toggle password visibility\"\n                          onClick={this.handleClickShowPassword}\n                        >\n                          {this.state.showPassword ? <VisibilityOff /> : <Visibility />}\n                        </IconButton>\n                      </InputAdornment>\n                    }\n                  />\n                </FormControl>\n              </Grid>\n              <Grid item xs={12}>\n                <Button\n                  size=\"small\"\n                  onClick={this.handlePasswordResetOpen}\n                  style={{margin: '20px', marginBottom: '10px'}}\n                >\n                  Forgot Password?\n              </Button>\n              <Button\n                  size=\"small\"\n                  variant=\"contained\"\n                  type=\"submit\"\n                  name=\"submit\"\n                  color=\"primary\"\n                  style={{ margin: '20px', marginBottom: '10px' }}\n                >\n                  Log In\n              </Button>\n                <Grid item xs={12}>\n                  <p>Interested in tutoring? <Link to=\"/new-application\">Apply here</Link></p>\n                </Grid>\n              </Grid>\n            </Grid>\n          </form>\n          <ResetPasswordDialog openResetDialog={this.state.openResetDialog} handlePasswordResetClose={this.handlePasswordResetClose} />\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(mapStateToProps)(LoginPage);\n","import React, { Component } from 'react';\nimport { Link } from 'react-router-dom';\nimport axios from 'axios';\n\nclass RegisterPage extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      username: '',\n      password: '',\n      message: '',\n    };\n  }\n\n  registerUser = (event) => {\n    event.preventDefault();\n\n    if (this.state.username === '' || this.state.password === '') {\n      this.setState({\n        message: 'Choose a username and password!',\n      });\n    } else {\n      const body = {\n        username: this.state.username,\n        password: this.state.password,\n      };\n\n      // making the request to the server to post the new user's registration\n      axios.post('/api/user/register/', body)\n        .then((response) => {\n          if (response.status === 201) {\n            this.props.history.push('/home');\n          } else {\n            this.setState({\n              message: 'Ooops! That didn\\'t work. The username might already be taken. Try again!',\n            });\n          }\n        })\n        .catch(() => {\n          this.setState({\n            message: 'Ooops! Something went wrong! Is the server running?',\n          });\n        });\n    }\n  } // end registerUser\n\n  handleInputChangeFor = propertyName => (event) => {\n    this.setState({\n      [propertyName]: event.target.value,\n    });\n  }\n\n  renderAlert() {\n    if (this.state.message !== '') {\n      return (\n        <h2\n          className=\"alert\"\n          role=\"alert\"\n        >\n          {this.state.message}\n        </h2>\n      );\n    }\n    return (<span />);\n  }\n\n  render() {\n    return (\n      <div>\n        {this.renderAlert()}\n        <form onSubmit={this.registerUser}>\n          <h1>Register User</h1>\n          <div>\n            <label htmlFor=\"username\">\n              Email:\n              <input\n                type=\"text\"\n                name=\"username\"\n                value={this.state.username}\n                onChange={this.handleInputChangeFor('username')}\n              />\n            </label>\n          </div>\n          <div>\n            <label htmlFor=\"password\">\n              Password:\n              <input\n                type=\"password\"\n                name=\"password\"\n                value={this.state.password}\n                onChange={this.handleInputChangeFor('password')}\n              />\n            </label>\n          </div>\n          <div>\n            <input\n              type=\"submit\"\n              name=\"submit\"\n              value=\"Register\"\n            />\n            <Link to=\"/home\">Cancel</Link>\n          </div>\n        </form>\n      </div>\n    );\n  }\n}\n\nexport default RegisterPage;\n\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n// Material UI imports\nimport Button from '@material-ui/core/Button';\n// action imports\nimport { triggerLogout } from '../../redux/actions/loginActions';\nimport './TutorNav.css';\n\nimport { Navbar, NavbarBrand, NavbarNav, NavbarToggler, Collapse, NavItem, NavLink, Dropdown, DropdownToggle, DropdownMenu, DropdownItem } from 'mdbreact';\n\nclass TutorNav extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            collapse: false,\n            isWideEnough: false,\n        };\n        this.onClick = this.onClick.bind(this);\n    }\n\n    onClick() {\n        this.setState({\n            collapse: !this.state.collapse,\n        });\n    }\n\n    logout = () => {\n        this.props.dispatch(triggerLogout());\n    }\n\n    render() {\n        return (\n            <Navbar className=\"tutor-nav\" light expand=\"md\" scrolling>\n                <NavbarBrand tag=\"span\">\n                    <img className=\"tutor-nav-brand\" src=\"./images/catalyst2.png\" />\n                </NavbarBrand>\n                {!this.state.isWideEnough && <NavbarToggler onClick={this.onClick} />}\n                <Collapse isOpen={this.state.collapse} navbar>\n                    <NavbarNav right>\n                        <NavItem>\n                            <Button variant=\"contained\" onClick={this.logout}>Logout</Button>\n                        </NavItem>\n                    </NavbarNav>\n                </Collapse>\n            </Navbar>\n        )\n    }\n}\n\nexport default connect()(TutorNav);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\n// css\nimport './AdminNav.css';\n// Material UI \nimport Button from '@material-ui/core/Button';\nimport Badge from '@material-ui/core/Badge';\n// Material Bootstrap\nimport { Navbar, NavbarBrand, NavbarNav, NavbarToggler, Collapse, NavItem, NavLink } from 'mdbreact';\n// action imports\nimport { triggerLogout } from '../../redux/actions/loginActions';\n\nconst style = {\n    backgroundColor: 'rgba(0,0,0,0.5)',\n}\n\nclass AdminNav extends React.Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            collapse: false,\n            isWideEnough: false,\n            pendingApplications: 0,\n        };\n        this.onClick = this.onClick.bind(this);\n    }\n\n    // on page render, display the count of current pending applications\n    componentDidMount() {\n        this.getPendingApplications();\n    }\n\n    // when pending applications are updated, re-fetch, re-count, and re-render\n    // componentDidUpdate() {\n    //     this.getPendingApplications();\n    // }\n\n    // get the count of current pending applications\n    getPendingApplications = () => {\n        axios({\n            method: 'GET',\n            url: '/applications/pending'\n        }).then((response) => {\n            this.setState({\n                pendingApplications: response.data[0].count\n            })\n        }).catch((error) => {\n            console.log('Error getting applications from the server: ', error);\n        });\n    }\n\n    onClick() {\n        this.setState({\n            collapse: !this.state.collapse,\n        });\n    }\n\n    logout = () => {\n        this.props.dispatch(triggerLogout());\n    }\n\n    startTutoring = () => {\n        this.props.history.push('/select-location');\n    }\n\n    render() {\n        // regular manage applications nav link without pending applications\n        let pendingItem = \n        (<NavLink to=\"/manage-applications\" activeStyle={style}>Manage Applications\n        </NavLink>);\n\n        // if pending applications are more than 0, count and display them\n        if (this.state.pendingApplications > 0) {\n            pendingItem = (\n                <Badge badgeContent={this.state.pendingApplications} color=\"secondary\">\n                    <NavLink to=\"/manage-applications\" activeStyle={style}>\n                    Manage Applications\n                    </NavLink>\n                </Badge>\n            )\n        }\n\n        return (\n            \n            <Navbar className=\"admin-nav\" dark expand=\"md\" scrolling>\n                <NavbarBrand tag=\"span\">\n                <NavItem>\n                <NavLink to=\"/admin-data\"><img className=\"tutor-nav-brand\" src=\"./images/catalystwhite.png\" /></NavLink>\n                    </NavItem>\n                </NavbarBrand>\n                {!this.state.isWideEnough && <NavbarToggler onClick={this.onClick} />}\n                <Collapse isOpen={this.state.collapse} navbar>\n                    <NavbarNav left>\n                        <NavItem>\n                            <NavLink to=\"/admin-data\" activeStyle={style}>View Data</NavLink>\n                        </NavItem>\n                        <NavItem>\n                            <NavLink to=\"/manage-tutors\" activeStyle={style}>Manage Tutors</NavLink>\n                        </NavItem>\n                        {/* return Manage Applications link and count */}\n                        <NavItem>\n                            {pendingItem}\n                        </NavItem>\n                        <NavItem>\n                            <NavLink to=\"/manage-locations\" activeStyle={style}>Manage Locations</NavLink>\n                        </NavItem>\n                    </NavbarNav>\n                    <NavbarNav right>\n                        <NavItem>\n                            <Button variant=\"contained\" onClick={this.startTutoring}>Start Tutoring</Button>\n                        </NavItem>\n                        <NavItem>\n                            <Button variant=\"contained\" onClick={this.logout}>Logout</Button>\n                        </NavItem>\n                    </NavbarNav>\n                </Collapse>\n            </Navbar>\n        );\n    }\n}\n\nexport default connect()(AdminNav);\n\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n// Material UI imports\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport { Button } from '@material-ui/core';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\n\nconst mapStateToProps = state => ({\n    locations: state.locations.locations\n});\n\nclass SelectLocationDropdown extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            selectedLocation: null,\n            open: false\n        }\n    }\n\n    componentDidMount = () => {\n        this.getLocations();\n    }\n\n    getLocations = () => {\n        this.props.dispatch({type: 'GET_LOCATIONS'});\n    }\n\n    handleChange = (event) => {\n        this.setState({\n            selectedLocation: event.target.value,\n        });\n    }\n\n    handleSubmit = (event) => {\n        event.preventDefault();\n        if (this.state.selectedLocation !== null) {\n            let action = {\n                type: 'SET_SESSION_LOCATION',\n                payload: this.state.selectedLocation\n            }\n            this.props.dispatch(action);\n            this.props.history.push('/sessions');\n        } else {\n            this.setState({\n                open: true,\n            })\n        }\n    }\n\n    handleClose = () => {\n        this.setState({\n            open: false,\n        })\n    }\n\n    render() {\n        return (\n            <form onSubmit={this.handleSubmit}>\n                <FormControl>\n                    <InputLabel htmlFor=\"location\" shrink>Location</InputLabel>\n                    <Select\n                        value={this.state.selectedLocation}\n                        onChange={this.handleChange}\n                        input={<Input name=\"location\" id=\"location\" />}\n                    >\n                        <MenuItem value=\"\">\n                            <em>None</em>\n                        </MenuItem>\n                        {this.props.locations.map((location) => {\n                            return (\n                                <MenuItem\n                                    key={location.id}\n                                    value={location}>\n                                    {location.location_name}\n                                </MenuItem>\n                            )\n                        })}\n                    </Select>\n                    <FormHelperText>Select where you are tutoring</FormHelperText>\n                </FormControl>\n                <Button style={{marginLeft: '20px', marginTop: '20px'}} variant=\"contained\" color=\"primary\" type=\"submit\">Start Tutoring</Button>\n                <Dialog\n                    open={this.state.open}\n                    onClose={this.handleClose}\n                >\n                    <DialogContent>\n                        <DialogContentText id=\"alert-dialog-description\">\n                            Please select a location.\n            </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color=\"primary\" autoFocus>\n                            Okay\n            </Button>\n                    </DialogActions>\n                </Dialog>\n            </form>\n        )\n    }\n}\n\nexport default connect(mapStateToProps)(SelectLocationDropdown);","import React, { Component } from 'react'\nimport { connect } from 'react-redux';\nimport './SelectLocationPage.css';\n// action imports\nimport { USER_ACTIONS } from '../../redux/actions/userActions';\n// component imports\nimport TutorNav from '../TutorNav/TutorNav';\nimport AdminNav from '../AdminNav/AdminNav';\nimport SelectLocationForm from './SelectLocationForm';\n\n\nconst mapStateToProps = state => ({\n    user: state.user,\n});\n\nclass SelectLocationPage extends Component {\n    componentDidMount() {\n        this.props.dispatch({ type: USER_ACTIONS.FETCH_USER });\n    }\n\n    // componentDidUpdate runs after props and state have changed.\n    //If we arent loading the user call AND we dont have a user, kick us out to home\n    componentDidUpdate() {\n        if (!this.props.user.isLoading && this.props.user.userName === null) {\n            this.props.history.push('/login');\n        }\n    }\n\n    render() {\n        let content = null;\n        let nav = null;\n\n        if (this.props.user.permissions === 1) {\n            nav = (\n                <TutorNav />\n            )\n        } else if (this.props.user.permissions === 2) {\n            nav = (\n                <AdminNav history={this.props.history}/>\n            )\n        }\n\n        if (this.props.user.userName) {\n            content = (\n                <div>\n                    <div className=\"select-location-container\">\n                        <h1>Select Location</h1>\n                        <SelectLocationForm history={this.props.history} />\n                    </div>\n                </div>\n            )\n        }\n        return (\n            <div>\n                {nav}\n                {content}\n            </div>\n        )\n    }\n}\n\nexport default connect(mapStateToProps)(SelectLocationPage);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n// Material UI imports\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\n\nconst mapStateToProps = state => ({\n    subjects: state.subjects,\n    selectedSubject: state.sessions.subject\n});\n\nclass SelectSubject extends Component {\n    componentDidMount = () => {\n        this.getSubjects();\n    }\n\n    getSubjects = () => {\n        this.props.dispatch({ type: 'GET_SUBJECTS' })\n    }\n\n    handleChange = (event) => {\n        console.log(event.target.value);\n        let action = {\n            type: 'SET_SESSION_SUBJECT',\n            payload: event.target.value\n        }\n        this.props.dispatch(action);\n    }\n\n    render() {\n        let content = null;\n        // overtime is brought in via EndSessionDialog.js\n        if (this.props.overtime) {\n            content = (\n                // if the session runs overtime, highlight the subject dropdown\n                <div>\n                <InputLabel htmlFor=\"subject\">Subject: </InputLabel>\n                <mark>\n                    <Select\n                    style={{minWidth: '200px'}}\n                    defaultValue=\"3\"\n                    value={this.props.selectedSubject}\n                    onChange={this.handleChange}\n                    inputProps={{\n                        name: 'subject',\n                        id: 'subject',\n                    }}\n                >\n                    <MenuItem value=\"\">\n                        <em>None</em>\n                    </MenuItem>\n                    {this.props.subjects.map((subject) => {\n                        return (\n                            <MenuItem key={subject.id} value={subject.id}>{subject.subjects}</MenuItem>\n                        )\n                    })}\n                </Select></mark></div>\n            )\n        } else {\n            content = (\n                // if the session ends within the allowed timegframe, don't highlight the subject dropdown\n                // also removes the highlighted subject dropdown from edit field\n                <div>\n                <InputLabel htmlFor=\"subject\">Subject: </InputLabel>\n                <Select\n                    style={{minWidth: '200px'}}\n                    defaultValue=\"3\"\n                    value={this.props.selectedSubject}\n                    onChange={this.handleChange}\n                    inputProps={{\n                        name: 'subject',\n                        id: 'subject',\n                    }}\n                >\n                    <MenuItem value=\"\">\n                        <em>None</em>\n                    </MenuItem>\n                    {this.props.subjects.map((subject) => {\n                        return (\n                            <MenuItem key={subject.id} value={subject.id}>{subject.subjects}</MenuItem>\n                        )\n                    })}\n                </Select>\n                </div>\n            )\n        }\n        return (\n            <div>\n                {content}\n            </div>\n        )\n    }\n}\n\nexport default connect(mapStateToProps)(SelectSubject);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport moment from 'moment';\n// Material UI imports\nimport { Button } from '@material-ui/core';\nimport StopIcon from '@material-ui/icons/Stop';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport ErrorIcon from '@material-ui/icons/WarningOutlined';\n// component impors\nimport SelectSubject from './SelectSubject';\n\nconst mapStateToProps = state => ({\n    subject: state.sessions.subject\n});\n\nclass EndSessionDialog extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            open: false,\n            topic: '',\n            endTime: ''\n        }\n    }\n\n    endSession = () => {\n        console.log('endSession id: ', this.props.id);\n        let dataToSend = {\n            id: this.props.id,\n            subject: this.props.subject,\n            topic: this.state.topic,\n            end_time: this.state.endTime\n        }\n        let action = {\n            type: 'END_SESSION',\n            payload: dataToSend\n        }\n        this.props.dispatch(action);\n    }\n\n    handleClickOpen = () => {\n        this.setState({ open: true });\n        this.props.dispatch({type: 'RESET_SESSION'})\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    handleInputChange = (event) => {\n        this.setState({\n            topic: event.target.value\n        })\n    }\n\n    handleEndTime = (event) => {\n        this.setState({\n            endTime: event.target.value\n        })\n    }\n\n    render() {\n        let content = null;\n        let selectSubject = null;\n        let stop = <StopIcon />\n        let error = <div style={{marginBottom: '10px', float: 'left'}}><ErrorIcon /></div>;\n        let today = new Date();\n        let dd = today.getDate();\n        let mm = today.getMonth() + 1; //January is 0!\n        let yyyy = today.getFullYear();\n\n        if (dd < 10) {\n            dd = '0' + dd\n        }\n\n        if (mm < 10) {\n            mm = '0' + mm\n        }\n\n        today = mm + '/' + dd + '/' + yyyy;\n        if (moment(this.props.date).format('MM/DD/YYYY') !== today) {\n            content = (<DialogContentText>\n                <h6 style={{color: 'red', float: 'left'}}>{error}&nbsp;This session was not ended on the day it took place!</h6> \n                <br /><b>Please specify what time it ended:</b>\n                <br />Start date: {moment(this.props.date).format('MM/DD/YYYY')}\n                <br />Start time: {moment(this.props.start_time, 'HH:mm:ss.SSSSSS').format('h:mm a')}\n                <br />End time:&nbsp;<mark><TextField\n                type=\"time\"\n                // defaultValue=\"18:00\"\n                onChange={this.handleEndTime}\n                /><br /></mark>\n        <br /></DialogContentText>     \n            )\n            selectSubject = (\n                <SelectSubject overtime={true} />\n            )\n        }\n        else {\n            selectSubject = (\n                <SelectSubject overtime={false} />\n            )\n        }\n        console.log(today);\n        console.log(moment(this.props.date).format('MM/DD/YYYY'));\n            return (\n                <div>\n                    <Button style={{float: 'right'}} variant=\"contained\" color=\"secondary\" onClick={this.handleClickOpen}>{stop}End</Button>\n                    <Dialog\n                        open={this.state.open}\n                        onClose={this.handleClose}\n                        aria-labelledby=\"form-dialog-title\"\n                    >\n                        <DialogTitle id=\"form-dialog-title\">End Tutoring Session</DialogTitle>                        <DialogContent>\n                        {content}\n                        <DialogContentText>\n                            <b>Select which subject was worked on with the student:</b>\n                        </DialogContentText>\n                            {selectSubject}\n                            <TextField\n                                required\n                                autoFocus\n                                margin=\"dense\"\n                                id=\"name\"\n                                label=\"Subtopic\"\n                                type=\"email\"\n                                onChange={this.handleInputChange}\n                                fullWidth\n                            />\n                        </DialogContent>\n                        <DialogActions>\n                            <Button onClick={this.handleClose} color=\"primary\">\n                                Cancel\n                            </Button>\n                            <Button variant=\"contained\" color=\"primary\" onClick={this.endSession} color=\"primary\">\n                                End Session\n                            </Button>\n                        </DialogActions>\n                    </Dialog>\n                </div>\n            )\n    }\n}\n\nexport default connect(mapStateToProps)(EndSessionDialog);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n// Material UI imports\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n// moment.js imports\nimport moment from 'moment';\n// component imports\nimport EndSessionDialog from './EndSessionDialog';\n\nconst mapStateToProps = state => ({\n    activeSessions: state.sessions.activeSessions\n});\n\nclass ActiveSessionsTable extends Component {\n   componentDidMount = () => {\n        this.getActiveSessions();\n    }\n\n    getActiveSessions = () => {\n        this.props.dispatch({type: 'GET_ACTIVE_SESSIONS'});\n    }\n\n    render() {\n        return (\n            <Paper>\n                <Table>\n                    <TableHead style={{backgroundColor: '#F5F5F5'}}>\n                        <TableRow>\n                            <TableCell style={{color: 'black', size: '20px'}}>Name</TableCell>\n                            <TableCell style={{color: 'black', size: '20px'}}>School</TableCell>\n                            <TableCell style={{color: 'black', size: '20px'}}>Grade</TableCell>\n                            <TableCell style={{color: 'black', size: '20px'}}>Start Time</TableCell>\n                            <TableCell></TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {this.props.activeSessions.map(session => {\n                            return (\n                                <TableRow key={session.id}>\n                                    <TableCell component=\"th\" scope=\"row\">\n                                        {session.student_name}\n                                    </TableCell>\n                                    <TableCell>{session.school_name}</TableCell>\n                                    <TableCell>{session.grade_level}</TableCell>\n                                    <TableCell>{moment(session.start_time, 'HH:mm:ss.SSSSSS').format('h:mm a')}</TableCell>\n                                    <TableCell>\n                                        <EndSessionDialog \n                                        date={session.session_date} \n                                        id={session.id} \n                                        start_time={session.start_time}\n                                        />\n                                    </TableCell>\n                                </TableRow>\n                            );\n                        })}\n                    </TableBody>\n                </Table>\n            </Paper>\n        )\n    }\n}\n\nexport default connect(mapStateToProps)(ActiveSessionsTable);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n// Material UI imports\nimport Select from 'react-select';\n\nconst mapStateToProps = state => ({\n    schools: state.schools,\n    selectedSchool: state.sessions.school\n});\n\nclass SelectSchool extends Component {\n    componentDidMount = () => {\n        this.getSchools();\n    }\n\n    getSchools = () => {\n        this.props.dispatch({ type: 'GET_SCHOOLS' });\n    }\n\n    handleChange = (value) => {\n        let action = {\n            type: 'SET_SESSION_SCHOOL',\n            payload: value\n        }\n        this.props.dispatch(action);\n    };\n\n    render() {\n        return (\n            <div class=\"new-session-inputs\">\n                <Select\n                    class=\"select-school\"\n                    options={this.props.schools.map((school) => ({\n                        value: school.id,\n                        label: school.school_name,\n                    }))}\n                    value={this.props.selectedSchool}\n                    onChange={this.handleChange}\n                    placeholder=\"Select a school\"\n                />\n            </div>\n        )\n    }\n}\n\nexport default connect(mapStateToProps)(SelectSchool);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n// Material UI imports\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\n\nconst mapStateToProps = state => ({\n    selectedGrade: state.sessions.grade,\n    grades: state.grades\n});\n\nclass SelectGrade extends Component {\n    componentDidMount = () => {\n        this.getGrades();\n    }\n\n    getGrades = () => {\n        this.props.dispatch({type: 'GET_GRADES'});\n    }\n\n    handleChange = (event) => {\n        console.log(event.target.value);\n        let action = {\n            type: 'SET_SESSION_GRADE',\n            payload: event.target.value\n        }\n        this.props.dispatch(action);\n    }\n\n    render() {\n        return (\n            <div class=\"new-session-inputs\">\n                <InputLabel htmlFor=\"grade\">Grade</InputLabel>\n                <Select\n                    required\n                    value={this.props.selectedGrade}\n                    onChange={this.handleChange}\n                    inputProps={{\n                        name: 'grade',\n                        id: 'grade',\n                    }}\n                >\n                    <MenuItem value=\"0\">\n                        <em>None</em>\n                    </MenuItem>\n                    {this.props.grades.map((grade) => {\n                        return(\n                            <MenuItem key={grade.id} value={grade.id}>{grade.grade_level}</MenuItem>\n                        )\n                    })}\n                </Select>\n            </div>\n        )\n    }\n}\n\nexport default connect(mapStateToProps)(SelectGrade);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport moment from 'moment';\n// Material UI imports\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport EditIcon from '@material-ui/icons/EditOutlined';\n\n// component imports\nimport SelectSchool from './SelectSchool';\nimport SelectGrade from './SelectGrade';\nimport SelectSubject from './SelectSubject';\n\nconst mapStateToProps = state => ({\n    sessions: state.sessions\n});\n\nclass EditSessionDialog extends Component {\n    state = {\n        open: false,\n        editedSession: {\n            session_date: this.props.session.session_date,\n            student_name: this.props.session.student_name,\n            topics: this.props.session.topics,\n            time: this.props.time\n        }\n    };\n\n    handleClickOpen = () => {\n        console.log(this.props.session);\n        this.setState({ open: true });\n        this.props.dispatch({\n            type: 'SET_SESSION_SCHOOL',\n            payload: {\n                value: this.props.session.school_id,\n                label: this.props.session.school_name\n            }\n        });\n        this.props.dispatch({\n            type: 'SET_SESSION_GRADE',\n            payload: this.props.session.grade_id\n        });\n        this.props.dispatch({\n            type: 'SET_SESSION_SUBJECT',\n            payload: this.props.session.subjects_id\n        });\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    changeSession = (event) => {\n        this.setState({\n            editedSession: {\n                ...this.state.editedSession,\n                [event.target.name]: event.target.value\n            }\n        })\n    }\n\n    calculateNewTime = () => {\n        let time = this.state.editedSession.time;\n        let end_time = moment(this.props.session.start_time, 'HH:mm:ss').add(time, 'm')._d;\n        end_time = moment(end_time).format('HH:mm:ss');\n        return end_time;\n    }\n\n    handleConfirm = () => {\n        let dataToSend = {\n            session_date: this.state.editedSession.session_date,\n            student_name: this.state.editedSession.student_name,\n            school_id: this.props.sessions.school.value,\n            grade_id: this.props.sessions.grade,\n            subjects_id: this.props.sessions.subject,\n            topics: this.state.editedSession.topics,\n            end_time: this.calculateNewTime(),\n            id: this.props.session.id,\n        }\n        console.log(dataToSend);\n        let action = {\n            type: 'EDIT_SESSION',\n            payload: dataToSend,\n        }\n        this.props.dispatch(action);\n        this.handleClose();\n    }\n\n    render() {\n        let edit = <EditIcon />\n        return (\n            <div>\n                <Button style={{float: 'right'}} variant=\"contained\" onClick={this.handleClickOpen}>{edit}Edit</Button>\n                <Dialog\n                    open={this.state.open}\n                    onClose={this.handleClose}\n                    aria-labelledby=\"form-dialog-title\"\n                >\n                    <DialogTitle id=\"form-dialog-title\">Edit Session</DialogTitle>\n                    <DialogContent>\n                        <TextField\n                            type=\"date\"\n                            name=\"session_date\"\n                            onChange={this.changeSession}\n                            defaultValue={moment(this.state.editedSession.session_date).format('YYYY-MM-DD')}\n                        />\n                        <TextField\n                            value={this.state.editedSession.student_name}\n                            name=\"student_name\"\n                            onChange={this.changeSession}\n                            fullWidth\n                        />\n                        <SelectSchool />\n                        <SelectGrade />\n                        <SelectSubject />\n                        <TextField\n                            value={this.state.editedSession.topics}\n                            name=\"topics\"\n                            onChange={this.changeSession}\n                            fullWidth\n                        />\n                        <TextField\n                            value={this.state.editedSession.time}\n                            name=\"time\"\n                            onChange={this.changeSession}\n                            fullWidth\n                        />\n                        <InputLabel htmlFor=\"time\">minutes</InputLabel>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color=\"primary\">\n                            Cancel\n            </Button>\n                        <Button variant=\"contained\" color=\"primary\" onClick={this.handleConfirm} color=\"primary\">\n                            Confirm Changes\n            </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        );\n    }\n}\n\nexport default connect(mapStateToProps)(EditSessionDialog);","import React, { Component } from 'react';\nimport moment from 'moment';\n// Material UI imports\nimport TableCell from '@material-ui/core/TableCell';\nimport TableRow from '@material-ui/core/TableRow';\n// component imports\nimport EditSessionDialog from './EditSessionDialog';\n\nclass CompletedSessionsTableRow extends Component {\n    render() {\n        let time = null;\n        if (this.props.n.time.hours > 0 && this.props.n.time.minutes == null) {\n            time = (this.props.n.time.hours * 60);\n        } else if (this.props.n.time.hours > 0) {\n            time = (this.props.n.time.hours * 60) + this.props.n.time.minutes;\n        } else {\n            time = this.props.n.time.minutes;\n        }\n\n        return (\n            <TableRow\n                    hover\n                    role=\"checkbox\"\n                    tabIndex={-1}\n                >\n                    <TableCell padding=\"checkbox\">\n                        {moment(this.props.n.session_date).format('MM/DD/YY')}\n                    </TableCell>\n                    <TableCell component=\"th\" scope=\"row\" padding=\"none\">\n                        {this.props.n.student_name}\n                    </TableCell>\n                    <TableCell>{this.props.n.school_name}</TableCell>\n                    <TableCell>{this.props.n.grade_level}</TableCell>\n                    <TableCell>{this.props.n.subjects}</TableCell>\n                    <TableCell>{this.props.n.topics}</TableCell>\n                    <TableCell>{time} minutes</TableCell>\n                    <TableCell>\n                        <EditSessionDialog \n                        session={this.props.n} \n                        time={time}\n                        />\n                    </TableCell>\n                </TableRow>\n        )\n    }\n}\n\nexport default CompletedSessionsTableRow;","import React from 'react';\nimport { connect } from 'react-redux';\n// Material UI imports\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\n// component imports\nimport CompletedSessionsTableRow from './CompletedSessionsTableRow';\n\nconst mapStateToProps = state => ({\n    completedSessions: state.sessions.completedSessions\n});\n\nfunction desc(a, b, orderBy) {\n    if (b[orderBy] < a[orderBy]) {\n        return -1;\n    }\n    if (b[orderBy] > a[orderBy]) {\n        return 1;\n    }\n    return 0;\n}\n\nfunction stableSort(array, cmp) {\n    const stabilizedThis = array.map((el, index) => [el, index]);\n    stabilizedThis.sort((a, b) => {\n        const order = cmp(a[0], b[0]);\n        if (order !== 0) return order;\n        return a[1] - b[1];\n    });\n    return stabilizedThis.map(el => el[0]);\n}\n\nfunction getSorting(order, orderBy) {\n    return order === 'desc' ? (a, b) => desc(a, b, orderBy) : (a, b) => -desc(a, b, orderBy);\n}\n\nclass CompletedSessionsTable extends React.Component {\n    state = {\n        page: 0,\n        rowsPerPage: 5,\n    };\n\n    componentDidMount = () => {\n        this.getCompletedSessions();\n    }\n\n    getCompletedSessions = () => {\n       \n        this.props.dispatch({type: 'GET_COMPLETED_SESSIONS'});\n    }\n\n    handleChangePage = (event, page) => {\n        this.setState({ page });\n    };\n\n    handleChangeRowsPerPage = event => {\n        this.setState({ rowsPerPage: event.target.value });\n    };\n\n    render() {\n        const { rowsPerPage, page } = this.state;\n        const emptyRows = rowsPerPage - Math.min(rowsPerPage, this.props.completedSessions.length - page * rowsPerPage);\n\n        return (\n            <Paper>\n                <div>\n                    <Table aria-labelledby=\"tableTitle\">\n                        <TableHead style={{backgroundColor: '#F5F5F5', color: 'red'}}>\n                            <TableRow>\n                                <TableCell>Date</TableCell>\n                                <TableCell>Name</TableCell>\n                                <TableCell>School</TableCell>\n                                <TableCell>Grade</TableCell>\n                                <TableCell>Subject</TableCell>\n                                <TableCell>Subtopic</TableCell>\n                                <TableCell>Total Time</TableCell>\n                                <TableCell></TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {stableSort(this.props.completedSessions, getSorting())\n                                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                                .map(n => {\n                                    // const isSelected = this.isSelected(n.id);\n                                    return (\n                                        <CompletedSessionsTableRow key={n.id} n={n} />\n                                    );\n                                })}\n                            {emptyRows > 0 && (\n                                <TableRow style={{ height: 49 * emptyRows }}>\n                                    <TableCell colSpan={6} />\n                                </TableRow>\n                            )}\n                        </TableBody>\n                    </Table>\n                </div>\n                <TablePagination\n                    component=\"div\"\n                    count={this.props.completedSessions.length}\n                    rowsPerPage={rowsPerPage}\n                    page={page}\n                    backIconButtonProps={{\n                        'aria-label': 'Previous Page',\n                    }}\n                    nextIconButtonProps={{\n                        'aria-label': 'Next Page',\n                    }}\n                    onChangePage={this.handleChangePage}\n                    onChangeRowsPerPage={this.handleChangeRowsPerPage}\n                />\n            </Paper>\n        );\n    }\n}\n\nexport default connect(mapStateToProps)(CompletedSessionsTable);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n// Material UI imports\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n// component imports\nimport SelectSchool from './SelectSchool';\nimport SelectGrade from './SelectGrade';\n\nconst style = {\n    marginBottom: '10px',\n}\n\nconst mapStateToProps = state => ({\n    sessions: state.sessions\n});\n\nclass NewSessionDialog extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            open: false,\n            name: '',\n        }\n    }\n\n    handleClickOpen = () => {\n        this.setState({\n            open: true,\n        })\n        this.props.dispatch({type: 'RESET_SESSION'})\n    }\n\n    handleClose = () => {\n        this.setState({\n            open: false,\n        })\n    }\n\n    handleInputChange = (event) => {\n        this.setState({\n            name: event.target.value,\n        })\n    }\n\n    handleSessionStart = (e) => {\n        e.preventDefault();\n        let dataToSend = {\n            location: this.props.sessions.location,\n            name: this.state.name,\n            school: this.props.sessions.school.value,\n            grade: this.props.sessions.grade\n        }\n        let action = {\n            type: 'POST_NEW_SESSION',\n            payload: dataToSend\n        }\n        this.props.dispatch(action);\n        this.handleClose();\n    }\n\n    render() {\n        return (\n            <div>\n                <div>\n                    <Button style={style} variant=\"contained\" color=\"primary\" onClick={this.handleClickOpen}>+ New Session</Button>\n                </div>\n                <Dialog\n                    open={this.state.open}\n                    onClose={this.handleClose}\n                    aria-labelledby=\"form-dialog-title\"\n                >\n                    <form onSubmit={this.handleSessionStart}>\n                    <DialogTitle id=\"form-dialog-title\">Start New Tutoring Session</DialogTitle>\n                    <DialogContent class=\"new-session-dialog\">\n                    \n                        <TextField\n                            required\n                            autoFocus\n                            margin=\"dense\"\n                            id=\"name\"\n                            label=\"Student First Name\"\n                            fullWidth\n                            onChange={this.handleInputChange}\n                        />\n                        <SelectSchool />\n                        <SelectGrade required={true}/>\n                  \n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color=\"primary\">\n                            Cancel\n                        </Button>\n                        <Button variant=\"contained\" color=\"primary\" type=\"submit\" color=\"primary\">\n                            Start Session\n                        </Button>\n                    </DialogActions>\n                    </form>\n                </Dialog>\n            </div>\n        )\n    }\n}\n\nexport default connect(mapStateToProps)(NewSessionDialog);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport './SessionsPage.css';\nimport LocationIcon from '@material-ui/icons/LocalLibraryOutlined';\nimport { Link } from 'react-router-dom';\n// action imports\nimport { USER_ACTIONS } from '../../redux/actions/userActions';\n// component imports\nimport TutorNav from '../TutorNav/TutorNav';\nimport AdminNav from '../AdminNav/AdminNav';\nimport ActiveSessionsTable from './ActiveSessionsTable';\nimport CompletedSessionsTable from './CompletedSessionsTable';\nimport NewSessionDialog from './NewSessionDialog';\n\nconst mapStateToProps = state => ({\n    user: state.user,\n    location: state.sessions.location\n});\n\nclass SessionsPage extends Component {\n    componentDidMount() {\n        this.props.dispatch({ type: USER_ACTIONS.FETCH_USER });\n    }\n\n    // componentDidUpdate runs after props and state have changed.\n    //If we arent loading the user call AND we dont have a user, kick us out to home\n    componentDidUpdate() {\n        if (!this.props.user.isLoading && this.props.user.userName === null) {\n            this.props.history.push('/login');\n        } else if (this.props.location === null) {\n            this.props.history.push('/select-location');\n        }\n    }\n\n    render() {\n        let content = null;\n        let nav = null;\n        let location = <LocationIcon />;\n\n        if (this.props.user.permissions === 1) {\n            nav = (\n                <TutorNav />\n            )\n            location = (\n                <div style={{ position: 'relative', color: '#7F8380' }}>\n                   <h6 style={{position: 'absolute', top: '0', right: '0', fontSize: '20px' }}>{location}&nbsp;You are tutoring at&nbsp;<Link to=\"/select-location\" style={{ color: '#7F8380' }}><u>{this.props.location.location_name}</u></Link></h6>\n                </div>\n            )\n        } else if (this.props.user.permissions === 2) {\n            nav = (\n                <AdminNav history={this.props.history} />\n            )\n            location = (\n                <div style={{ position: 'relative', color: '#7F8380' }}>\n                    <h6 style={{ position: 'absolute', top: '0', right: '0', fontSize: '20px' }}><LocationIcon />&nbsp;You are tutoring at&nbsp;<Link to=\"/select-location\" style={{ color: '#7F8380' }}><u>{this.props.location.location_name}</u></Link></h6>\n                </div>\n            )\n        }\n\n        if (this.props.user.userName) {\n            content = (\n                <div className=\"sessions-view-container\">\n                    <div>\n                    <h1 style={{float: 'left', marginBottom: '50px'}}>Tutoring Sessions</h1>\n                   {location}\n                    </div>\n                    <div style={{marginRight: '85%'}}>\n                    <NewSessionDialog />\n                    </div>\n                    <div className=\"active-sessions-container\">\n                        <h3>Active Sessions:</h3>\n                        <ActiveSessionsTable />\n                    </div>\n                    <div className=\"completed-sessions-container\">\n                        <h3>Completed Sessions:</h3>\n                        <CompletedSessionsTable />\n                    </div>\n                </div>\n            )\n        }\n        return (\n            <div>\n                {nav}\n                {content}\n            </div>\n        )\n    }\n}\n\nexport default connect(mapStateToProps)(SessionsPage);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\n// moment.js\nimport moment from 'moment';\n//CSV export\nimport { CSVLink } from \"react-csv\";\n//Material UI \nimport TextField from '@material-ui/core/TextField';\nimport Select from '@material-ui/core/Select';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types';\nimport { withStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport TableRow from '@material-ui/core/TableRow';\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\nimport Toolbar from '@material-ui/core/Toolbar';\nimport Typography from '@material-ui/core/Typography';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton';\nimport Tooltip from '@material-ui/core/Tooltip';\nimport DownloadCsv from '@material-ui/icons/GetApp';\nimport { lighten } from '@material-ui/core/styles/colorManipulator';\n\nconst MapStateToProps = state => ({\n    state,\n    grades: state.grades,\n    subjects: state.subjects,\n    locations: state.locations.locations\n\n});\n\nfunction desc(a, b, orderBy) {\n    if (b[orderBy] < a[orderBy]) {\n        return -1;\n    }\n    if (b[orderBy] > a[orderBy]) {\n        return 1;\n    }\n    return 0;\n}\n\nfunction stableSort(array, cmp) {\n    const stabilizedThis = array.map((el, index) => [el, index]);\n    stabilizedThis.sort((a, b) => {\n        const order = cmp(a[0], b[0]);\n        if (order !== 0) return order;\n        return a[1] - b[1];\n    });\n    return stabilizedThis.map(el => el[0]);\n}\n\nfunction getSorting(order, orderBy) {\n    return order === 'desc' ? (a, b) => desc(a, b, orderBy) : (a, b) => -desc(a, b, orderBy);\n}\n\nconst rows = [\n    { id: 'session_date', numeric: false, disablePadding: false, label: 'Date' },\n    { id: 'location_name', numeric: false, disablePadding: true, label: 'Location' },\n    { id: 'student_name', numeric: false, disablePadding: true, label: 'Student Name' },\n    { id: 'school_name', numeric: false, disablePadding: true, label: 'School' },\n    { id: 'grade_level', numeric: true, disablePadding: false, label: 'Grade Level' },\n    { id: 'subjects', numeric: false, disablePadding: true, label: 'Subject' },\n    { id: 'start_time', numeric: true, disablePadding: false, label: 'Time Spent' },\n];\n\nclass AdminDataHeader extends Component {\n\n    createSortHandler = property => event => {\n        this.props.onRequestSort(event, property);\n    };\n\n    render() {\n        const { order, orderBy, } = this.props;\n        return (\n            <TableHead>\n                <TableRow>\n                    {rows.map(row => {\n                        return (\n                            <TableCell\n                                key={row.id}\n                                numeric={row.numeric}\n                                padding={row.disablePadding ? 'none' : 'default'}\n                                sortDirection={orderBy === row.id ? order : false}\n                            >\n                                <Tooltip\n                                    title=\"Sort\"\n                                    placement={row.numeric ? 'bottom-end' : 'bottom-start'}\n                                    enterDelay={300}\n                                >\n                                    <TableSortLabel\n                                        active={orderBy === row.id}\n                                        direction={order}\n                                        onClick={this.createSortHandler(row.id)}\n                                    >\n                                        {row.label}\n                                    </TableSortLabel>\n                                </Tooltip>\n                            </TableCell>\n                        );\n                    }, this)}\n                </TableRow>\n            </TableHead>\n        );\n    }\n}\n\nAdminDataHeader.propTypes = {\n    onRequestSort: PropTypes.func.isRequired,\n    order: PropTypes.string.isRequired,\n    orderBy: PropTypes.string.isRequired,\n    rowCount: PropTypes.number.isRequired,\n};\n\nconst toolbarStyles = theme => ({\n    root: {\n        paddingRight: theme.spacing.unit,\n    },\n    highlight: theme.palette.type === 'light'\n        ? {\n            color: theme.palette.secondary.main,\n            backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n        : {\n            color: theme.palette.text.primary,\n            backgroundColor: theme.palette.secondary.dark,\n        },\n    spacer: {\n        flex: ' 1 1 100%',\n    },\n    actions: {\n        color: theme.palette.text.secondary,\n        display: 'flex'\n    },\n    title: {\n        flex: '0 0 auto',\n    },\n});\n\nlet AdminTableToolbar = props => {\n    const { numSelected, classes, filteredData } = props;\n    \n    // set table headers for the CSV export\n    const headers = [\n        { label: \"Location\", key: \"location_name\" },\n        { label: \"Session Date\", key: \"session_date\" },\n        { label: \"Student Name\", key: \"student_name\" },\n        { label: \"School Name\", key: \"school_name\" },\n        { label: \"Grade Level\", key: \"grade_level\" },\n        { label: \"Subject\", key: \"subjects\" },\n        { label: \"Time (Minutes)\", key: \"time\" }\n    ];\n    return (\n        <div>\n            <Toolbar\n                className={classNames(classes.root, {\n                    [classes.highlight]: numSelected > 0,\n                })}\n            >\n                <div className={classes.title}>\n                    <Typography variant=\"h6\" id=\"tableTitle\">\n                        Tutoring Data\n                    </Typography>\n                </div>\n                <div className={classes.spacer} />\n                <div className={classes.actions} >\n                    <Typography variant=\"caption\" align=\"nowrap\" style={{width: '85px', marginTop: '16px', color: 'rgb(117,117,117)'}}>Export as CSV</Typography>\n                    <Tooltip title=\"Export CSV\" >\n                        <CSVLink\n                            data={filteredData}\n                            headers={headers}\n                        >\n                            <IconButton aria-label=\"Export CSV\">\n                                <DownloadCsv />\n                            </IconButton>\n                        </CSVLink>\n                    </Tooltip>\n                </div>\n            </Toolbar>\n        </div>\n    );\n};\n\nAdminTableToolbar.propTypes = {\n    classes: PropTypes.object.isRequired,\n    numSelected: PropTypes.number.isRequired,\n};\n\nAdminTableToolbar = withStyles(toolbarStyles)(AdminTableToolbar);\n\nconst styles = theme => ({\n    root: {\n        width: '100%',\n    },\n    table: {\n        minWidth: 1020,\n    },\n    tableWrapper: {\n        overflowX: 'auto',\n    },\n});\n\nclass AdminDataTable extends Component {\n\n    componentDidMount() {\n        this.getSessionData(); // get sessions\n        this.getYearData(); // get school year\n        this.props.dispatch({ type: 'GET_GRADES' });\n        this.props.dispatch({ type:'GET_SUBJECTS' });\n        this.props.dispatch({ type: 'GET_LOCATIONS' });\n    }\n\n    state = {\n        order: 'asc',\n        orderBy: 'date',\n        selected: [],\n        data: [],\n        datasets: [],\n        years: [],\n        page: 0,\n        rowsPerPage: 5,\n        locationFilter: '',\n        subjectFilter: '',\n        schoolFilter: '',\n        gradeFilter: '',\n        yearFilter: ''\n    }\n\n    getYearData = () => {\n        console.log('in getYearData');\n        axios({\n            method: 'GET',\n            url: '/sessions/library-summary/0'\n        }).then((response) => {\n            this.setState({\n                datasets: response.data,\n            });\n            console.log('back from server with: ', response.data);\n            this.setData();\n        }).catch((error) => {\n            console.log('error: ', error);\n            alert('There was an error getting sessions data.')\n        })\n    }\n\n    setData = () => {\n        console.log('setData');\n        let dataLabels = [];\n        console.log(this.state.datasets);\n        let sortedData = this.state.datasets.sort(function(a, b) {\n            console.log(moment(a.date).format('YYYY'), moment(b.date).format('YYYY'), moment(a.date).format('YYYY') - moment(b.date).format('YYYY'));\n            return moment(a.date).format('YYYY') - moment(b.date).format('YYYY');\n        })\n        console.log(sortedData);\n        sortedData = sortedData.filter(session => {\n            if (session.location_name === 'Hosmer Library') {\n                return session;\n            }\n        })\n        for (let location of sortedData) {\n            let currentYear = moment(location.date).format('YYYY');\n            let lastYear = moment(location.date).subtract(1, 'years').format('YYYY');\n            let schoolYear = lastYear +'-'+ currentYear;\n            let year = {\n                year: currentYear,\n                schoolYear: schoolYear\n            }\n            dataLabels.push(year);\n        }\n        this.setState({\n            years: dataLabels\n        });\n    }\n\n    getSessionData = () => {\n        console.log('in getSessionData');\n        axios({\n            method: 'GET',\n            url: '/sessions'\n        }).then((response) => {\n            for (let session of response.data) {\n                let time = null;\n                if (session.time.hours > 0 && session.time.minutes == null) {\n                    time = (session.time.hours * 60);\n                } else if (session.time.hours > 0) {\n                    time = (session.time.hours * 60) + session.time.minutes;\n                } else {\n                    time = session.time.minutes;\n                }\n                session.time = time;\n                session.session_date = moment(session.session_date.toString()).format('MM/DD/YY');\n            }\n            this.setState({\n                data: response.data\n            });\n            console.log('back from server with: ', response.data);\n        }).catch((error) => {\n            console.log('error: ', error);\n            alert('There was an error getting sessions data.')\n        })\n\n    }\n\n    handleRequestSort = (event, property) => {\n        const orderBy = property;\n        let order = 'desc';\n\n        if (this.state.orderBy === property && this.state.order === 'desc') {\n            order = 'asc';\n        }\n\n        this.setState({ order, orderBy });\n    };\n\n    handleChangePage = (event, page) => {\n        this.setState({ page });\n    };\n\n    handleChangeRowsPerPage = event => {\n        this.setState({ rowsPerPage: event.target.value });\n    };\n\n    isSelected = id => {\n        return this.state.selected.indexOf(id) !== -1;\n    }\n\n    handleFilterChange = (e) => {\n        console.log(e.target)\n        this.setState({\n            [e.target.name]: e.target.value\n        });\n    }\n\n    // function for the table filtering\n    filterData = (data) => {\n        let filteredData = data;\n        if (this.state.locationFilter.length) {\n            filteredData = filteredData.filter(session => {\n                if (session.location_name.toLowerCase().includes(this.state.locationFilter.toLowerCase())) {\n                    return session;\n                }\n            });\n        }\n        if (this.state.subjectFilter.length) {\n            filteredData = filteredData.filter(session => {\n                if (session.subjects.toLowerCase().includes(this.state.subjectFilter.toLowerCase())) {\n                    return session;\n                }\n            });\n        }\n        if (this.state.schoolFilter.length) {\n            filteredData = filteredData.filter(session => {\n                if (session.school_name.toLowerCase().includes(this.state.schoolFilter.toLowerCase())) {\n                    return session;\n                }\n            });\n        }\n        if (this.state.gradeFilter.length) {\n            filteredData = filteredData.filter(session => {\n                if (session.grade_level.toLowerCase() === this.state.gradeFilter.toLowerCase()) {\n                    return session;\n                }\n            });\n        }\n        if (this.state.yearFilter.length) {\n            filteredData = filteredData.filter(session => {\n                let date = moment(session.session_date).format('MM/DD');\n                let year = moment(session.session_date).format('YYYY');\n                if (date < '08/01' && year == this.state.yearFilter) {\n                    return session;\n                } else if (date > '07/31' && year == (this.state.yearFilter - 1)) {\n                    return session;\n                }\n            });\n        }\n        return filteredData;\n    }\n\n    render() {\n        let content = null;\n\n        const { classes } = this.props;\n        const { data, order, orderBy, selected, rowsPerPage, page } = this.state;\n        const emptyRows = rowsPerPage - Math.min(rowsPerPage, data.length - page * rowsPerPage);\n        // pass all session data through the filters\n        let filteredData = this.filterData(data);\n\n        content = (\n            <div>\n                <Paper className={classes.root}>\n                <AdminTableToolbar numSelected={selected.length} filteredData={filteredData} />\n                <div className=\"filter-container\">\n                <FormControl style={{ minWidth: '15%' }}>\n                            <InputLabel htmlFor=\"yearFilter\" shrink>Filter by School Year:</InputLabel>\n                        <Select\n                            value={this.state.yearFilter}\n                            onChange={this.handleFilterChange}\n                            inputProps={{\n                                name: 'yearFilter',\n                                id: 'yearFilter',\n                            }}\n                        >\n                            <MenuItem value=\"\">\n                                <p>Any</p>\n                            </MenuItem>\n                            {this.state.years.map(year => {\n                                return (\n                                    <MenuItem value={year.year}>{year.schoolYear}</MenuItem>\n                                )\n                            })}\n\n                        </Select>\n                    </FormControl>\n                        <FormControl style={{ minWidth: '15%' }}>\n                            <InputLabel htmlFor=\"locationFilter\" shrink>Filter by Location:</InputLabel>\n                        <Select\n                            value={this.state.locationFilter}\n                            onChange={this.handleFilterChange}\n                            inputProps={{\n                                name: 'locationFilter',\n                                id: 'locationFilter',\n                            }}\n                        >\n                            <MenuItem value=\"\">\n                                <p>Any</p>\n                            </MenuItem>\n                            {this.props.locations.map(location => {\n                                return (\n                                    <MenuItem value={location.location_name}>{location.location_name}</MenuItem>\n                                )\n                            })}\n\n                        </Select>\n                    </FormControl>\n                        <FormControl style={{ minWidth: '15%' }}>\n                            <InputLabel htmlFor=\"schoolFilter\" shrink>Filter by School:</InputLabel>\n                    <TextField\n                        name=\"schoolFilter\"\n                        id=\"schoolFilter\"\n                        margin=\"normal\"\n                        value={this.state.schoolFilter}\n                        onChange={this.handleFilterChange}\n                    />\n                    </FormControl>\n                        <FormControl style={{ minWidth: '15%'}}>\n                            <InputLabel htmlFor=\"gradeFilter\" shrink>Filter by Grade Level:</InputLabel>\n                        <Select\n                            value={this.state.gradeFilter}\n                            onChange={this.handleFilterChange}\n                            inputProps={{\n                                name: 'gradeFilter',\n                                id: 'gradeFilter',\n                            }}\n                        >\n                            <MenuItem value=\"\">\n                                <p>Any</p>\n                            </MenuItem>\n                            {this.props.grades.map(grade => {\n                                return (\n                                    <MenuItem value={grade.grade_level}>{grade.grade_level}</MenuItem>\n                                )\n                            })}\n\n                        </Select>\n                    </FormControl>\n                        <FormControl style={{ minWidth: '15%' }}>\n                        <InputLabel htmlFor=\"subjectFilter\" shrink>Filter by Subject:</InputLabel>\n                        <Select\n                            value={this.state.subjectFilter}\n                            onChange={this.handleFilterChange}\n                            inputProps={{\n                                name: 'subjectFilter',\n                                id: 'subjectFilter',\n                            }}\n                        >\n                            <MenuItem value=\"\">\n                                <p>Any</p>\n                            </MenuItem>\n                            {this.props.subjects.map(subject => {\n                                return (\n                                    <MenuItem value={subject.subjects}>{subject.subjects}</MenuItem>\n                                )\n                            })}\n\n                        </Select>\n                    </FormControl>\n                </div>\n                <div className={classes.tableWrapper}>\n                    <Table className={classes.table} aria-labelledby=\"tableTitle\">\n                        <AdminDataHeader\n                            order={order}\n                            orderBy={orderBy}\n                            onRequestSort={this.handleRequestSort}\n                            rowCount={filteredData.length}\n                        />\n                        <TableBody>\n                            {stableSort(filteredData, getSorting(order, orderBy))\n                                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                                .map((session, i) => {\n                                    const isSelected = this.isSelected(session.id);\n                                    return (\n                                        <TableRow\n                                            hover\n                                            tabIndex={-1}\n                                            key={i}\n                                        >\n                                            <TableCell component=\"th\" scope=\"row\" >\n                                                {session.session_date}\n                                            </TableCell>\n                                            <TableCell padding=\"none\">{session.location_name}</TableCell>\n                                            <TableCell padding=\"none\">{session.student_name}</TableCell>\n                                            <TableCell padding=\"none\">{session.school_name}</TableCell>\n                                            <TableCell numeric>{session.grade_level}</TableCell>\n                                            <TableCell padding=\"none\">{session.subjects}</TableCell>\n                                            <TableCell numeric>{session.time} minutes</TableCell>\n                                        </TableRow>\n                                    );\n                                })}\n                            {emptyRows > 0 && (\n                                <TableRow style={{ height: 49 * emptyRows }}>\n                                    <TableCell colSpan={6} />\n                                </TableRow>\n                            )}\n                        </TableBody>\n                    </Table>\n                </div>\n                <TablePagination\n                    component=\"div\"\n                    count={filteredData.length}\n                    rowsPerPage={rowsPerPage}\n                    page={page}\n                    backiconbuttonprop={{\n                        'aria-label': 'Previous Page',\n                    }}\n                    nextIconButtonProps={{\n                        'aria-label': 'Next Page',\n                    }}\n                    onChangePage={this.handleChangePage}\n                    onChangeRowsPerPage={this.handleChangeRowsPerPage}\n                />\n                </Paper>\n            </div>\n        );\n\n        return (\n            <div>\n                {content}\n            </div>\n        )\n    }\n}\n\nAdminDataTable.propTypes = {\n    classes: PropTypes.object.isRequired,\n};\n\nlet AdminExport = withStyles(styles)(AdminDataTable)\n\nexport default connect(MapStateToProps)(AdminExport);\n\n","import React, { Component } from 'react';\nimport PropTypes from 'prop-types';\n\nconst propTypes = {\n    className: PropTypes.string,\n    onloadCallbackName: PropTypes.string,\n    elementID: PropTypes.string,\n    onloadCallback: PropTypes.func,\n    verifyCallback: PropTypes.func,\n    expiredCallback: PropTypes.func,\n    render: PropTypes.string,\n    sitekey: PropTypes.string,\n    theme: PropTypes.string,\n    type: PropTypes.string,\n    verifyCallbackName: PropTypes.string,\n    expiredCallbackName: PropTypes.string,\n    size: PropTypes.string,\n    tabindex: PropTypes.string,\n    hl: PropTypes.string,\n    badge: PropTypes.string,\n};\n\nconst defaultProps = {\n    elementID: 'g-recaptcha',\n    onloadCallback: undefined,\n    onloadCallbackName: 'onloadCallback',\n    verifyCallback: undefined,\n    verifyCallbackName: 'verifyCallback',\n    expiredCallback: undefined,\n    expiredCallbackName: 'expiredCallback',\n    render: 'onload',\n    theme: 'light',\n    type: 'image',\n    size: 'normal',\n    tabindex: '0',\n    hl: 'en',\n    badge: 'bottomright',\n};\n\nconst isReady = () => typeof window !== 'undefined' && typeof window.grecaptcha !== 'undefined' && typeof window.grecaptcha.render === 'function';\n\nlet readyCheck;\n\nclass ReCaptcha extends Component {\n\n    constructor(props) {\n        super(props);\n        this._renderGrecaptcha = this._renderGrecaptcha.bind(this);\n        this.reset = this.reset.bind(this);\n        this.execute = this.execute.bind(this);\n        this.state = {\n            ready: isReady(),\n            widget: null,\n        };\n\n        if (!this.state.ready) {\n            readyCheck = setInterval(this._updateReadyState.bind(this), 1000);\n        }\n    }\n\n    componentDidMount() {\n        if (!!(this.state.ready)) {\n            this._renderGrecaptcha();\n        }\n    }\n\n    componentDidUpdate(prevProps, prevState) {\n        const {render, onloadCallback} = this.props;\n\n        if (render === 'explicit' && onloadCallback && this.state.ready && !prevState.ready) {\n            this._renderGrecaptcha();\n        }\n    }\n\n    componentWillUnmount() {\n        clearInterval(readyCheck);\n    }\n\n    reset() {\n        const {ready, widget} = this.state;\n        if (ready && widget !== null) {\n            window.grecaptcha.reset(widget);\n        }\n    }\n\n    execute() {\n        const { ready, widget } = this.state;\n        if (ready && widget !== null) {\n            window.grecaptcha.execute(widget);\n        }\n    }\n\n    _updateReadyState() {\n        if (isReady()) {\n            this.setState({\n                ready: true,\n            });\n\n            clearInterval(readyCheck);\n        }\n    }\n\n    _renderGrecaptcha() {\n        this.state.widget = window.grecaptcha.render(this.props.elementID, {\n            sitekey: this.props.sitekey,\n            callback: (this.props.verifyCallback) ? this.props.verifyCallback : undefined,\n            theme: this.props.theme,\n            type: this.props.type,\n            size: this.props.size,\n            tabindex: this.props.tabindex,\n            hl: this.props.hl,\n            badge: this.props.badge,\n            'expired-callback': (this.props.expiredCallback) ? this.props.expiredCallback : undefined,\n        });\n\n        if (this.props.onloadCallback) {\n            this.props.onloadCallback();\n        }\n    }\n\n    render() {\n        if (this.props.render === 'explicit' && this.props.onloadCallback) {\n            return (\n                <div id={this.props.elementID}\n                     data-onloadcallbackname={this.props.onloadCallbackName}\n                     data-verifycallbackname={this.props.verifyCallbackName}\n                />\n            );\n        } else {\n\n        return (\n            <div id={this.props.elementID}\n                 className=\"g-recaptcha\"\n                 data-sitekey={this.props.sitekey}\n                 data-theme={this.props.theme}\n                 data-type={this.props.type}\n                 data-size={this.props.size}\n                 data-badge={this.props.badge}\n                 data-tabindex={this.props.tabindex}\n            />\n        );\n      }\n    }\n}\n\nReCaptcha.propTypes = propTypes;\nReCaptcha.defaultProps = defaultProps;\n\nexport default ReCaptcha;\n","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport { Bar } from 'react-chartjs-2';\nimport Input from '@material-ui/core/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport moment from 'moment';\n\nconst mapStateToProps = state => ({\n    locations: state.locations.locations\n});\n\n\nclass AdminDataBarGraph extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            chartData: {\n                labels: [],\n                datasets: [],\n            },\n            location: 0,\n        }\n    }\n\n    componentDidMount() {\n        this.getLocations();\n        this.getSessionData();\n    }\n\n    getLocations = () => {\n        this.props.dispatch({ type: 'GET_LOCATIONS' });\n    }\n\n    handleLocationChange = async (event) => {\n        await this.setState({\n            location: event.target.value\n        });\n        await this.getSessionData();\n    }\n\n    getSessionData = () => {\n        console.log('in getSessionData');\n        axios({\n            method: 'GET',\n            url: '/sessions/library-summary/' + this.state.location\n        }).then((response) => {\n            this.setState({\n                datasets: response.data,\n            });\n            console.log('back from server with: ', response.data);\n            this.setData();\n        }).catch((error) => {\n            console.log('error: ', error);\n            alert('There was an error getting sessions data.')\n        })\n    }\n\n    setData = () => {\n        let dataLabels = [];\n        //TODO: Add support for any number of libraries.\n        let datasetLibraryOne = [];\n        let datasetLibraryTwo = [];\n        let sortedData = this.state.datasets.sort(function (a, b) {\n            return moment(a.date).format('YYYY') - moment(b.date).format('YYYY');\n        })\n        for (let location of sortedData) {\n            let currentYear = moment(location.date).format('YYYY');\n            let lastYear = moment(location.date).subtract(1, 'years').format('YYYY');\n            let schoolYear = lastYear + '-' + currentYear;\n            if (dataLabels.indexOf(schoolYear) < 0)\n            {dataLabels.push(schoolYear)};\n            //TODO: Add support for any number of libraries.\n            if (location.location_name == 'Franklin Library') {\n                datasetLibraryOne.push(location.count);\n            } else if (location.location_name == 'Hosmer Library') {\n                datasetLibraryTwo.push(location.count);\n            }\n        }\n        this.setState({\n            chartData: {\n                labels: dataLabels,\n                //TODO: label: Add support for any number of libraries.\n                datasets: [{\n                    label: `Franklin Library`,\n                    backgroundColor: this.getRandomColor(),\n                    data: datasetLibraryOne,\n                },\n                {\n                    label: `Hosmer Library`,\n                    backgroundColor: this.getRandomColor(),\n                    data: datasetLibraryTwo,\n                }\n                ]\n            }\n        });\n    }\n\n    getRandomColor = () => {\n        let letters = '0123456789ABCDEF';\n        let color = '#';\n        for (var i = 0; i < 6; i++) {\n            color += letters[Math.floor(Math.random() * 16)];\n        }\n        return color;\n    }\n\n    render() {\n        let content = null;\n\n        content = (\n            <div>\n                <div className=\"bar-graph\">\n                    <Bar\n                        data={this.state.chartData}\n                        options={{\n                            title: {\n                                display: true,\n                                text: 'Library Site Tutoring Summary',\n                                // text: `Library Site Tutor Summary: ${this.state.location}`,\n                                fontsize: 100,\n                            },\n                            legend: {\n                                display: true,\n                                position: 'bottom',\n                            },\n                            scales: {\n                                xAxes: [{\n                                    scaleLabel: {\n                                        display: true,\n                                        labelString: 'School Year',\n                                        distribution: 'series'\n                                    },\n                                }\n                                ],\n                                yAxes: [{\n                                    ticks: {\n                                        beginAtZero: true,\n                                    },\n                                    scaleLabel: {\n                                        display: true,\n                                        labelString: 'Number of Students',\n                                    },\n                                }]\n                            }\n                        }}\n                    />\n                </div>\n                <div>\n                    <FormControl>\n                        <InputLabel shrink>Location</InputLabel>\n                        <Select\n                            value={this.state.location}\n                            onChange={this.handleLocationChange}\n                            input={<Input name=\"location\" id=\"location\"/>}\n                        >\n                            <MenuItem value=\"0\">All</MenuItem>\n                            {this.props.locations.map((location) => {\n                                return (\n                                    <MenuItem\n                                        key={location.id}\n                                        value={location.id}>\n                                        {location.location_name}\n                                    </MenuItem>\n                                )\n                            })}\n                        </Select>\n                        <FormHelperText>Select Location</FormHelperText>\n                    </FormControl>\n                </div>\n            </div>\n        )\n        return (\n            <div>\n                {content}\n            </div>\n        )\n\n    }\n}\n\nexport default connect(mapStateToProps)(AdminDataBarGraph);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Input from '@material-ui/core/Input';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport Select from '@material-ui/core/Select';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormHelperText from '@material-ui/core/FormHelperText';\nimport FormControl from '@material-ui/core/FormControl';\nimport Button from '@material-ui/core/Button';\nimport Grid from '@material-ui/core/Grid';\nimport ShowIcon from '@material-ui/icons/ZoomInOutlined';\nimport HideIcon from '@material-ui/icons/ZoomOutOutlined';\n\n\n\n// // import { connect } from 'react-redux';\n// import axios from 'axios';\nimport { Pie } from 'react-chartjs-2';\n\nconst mapStateToProps = state => ({\n    locations: state.locations.locations\n});\n\nclass AdminDataPieChart extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            selectedLocation: 0,\n            showLegend: false\n\n        }\n    }\n    componentDidMount = () => {\n        this.getLocations();\n    }\n\n    getLocations = () => {\n        this.props.dispatch({ type: 'GET_LOCATIONS' });\n    }\n\n    handleChange = (event) => {\n        this.setState({\n            selectedLocation: event.target.value,\n        })\n        this.props.handleLocationChange(event);\n    }\n\n    handleLegendShow = () => {\n        this.setState({\n            showLegend: !this.state.showLegend\n        })\n    }\n\n    render() {\n        let content = null;\n        let toggleButton = null;\n        let zoom = <ShowIcon />\n        let minify = <HideIcon />\n\n        if (this.state.showLegend === false) {\n            toggleButton = <Button size=\"small\" variant=\"contained\" onClick={this.handleLegendShow}>{zoom}Show Legend</Button>\n        } else if (this.state.showLegend === true) {\n            toggleButton = <Button size=\"small\" variant=\"contained\" onClick={this.handleLegendShow}>{minify}Hide Legend</Button>\n        }\n\n\n\n        if (this.props.data) {\n            content = (\n                <div className=\"chart\">\n                    <Grid container>\n                        <Grid item xs={12}>\n                    <Pie data={this.props.data}\n                        options={{\n                            title: {\n                                display: true,\n                                text: 'Catalyst School Reach',\n                                fontsize: 25,\n                            },\n                            legend: {\n                                display: this.state.showLegend,\n                                position: 'top',\n                                labels: {\n                                    boxWidth: 10,\n                                    fontSize: 10\n                                }\n\n                            },\n                        }}\n                    />\n                    </Grid>\n                    <Grid item xs={6}>\n                        <FormControl>\n                            <InputLabel shrink>Location</InputLabel>\n                            <Select\n                                value={this.state.selectedLocation}\n                                onChange={this.handleChange}\n                                input={<Input name=\"location\" id=\"location\" />}\n                            >\n                                <MenuItem value=\"0\">\n                                    All\n                        </MenuItem>\n                                {this.props.locations.map((location) => {\n                                    return (\n                                        <MenuItem\n                                            key={location.id}\n                                            value={location.id}>\n                                            {location.location_name}\n                                        </MenuItem>\n                                    )\n                                })}\n                            </Select>\n                            <FormHelperText>Select Location</FormHelperText>\n                        </FormControl>\n                        </Grid>\n                        <Grid container xs={6} direction=\"row\" justify=\"flex-end\" alignItems=\"flex-end\">\n                        <Grid item>\n                            {toggleButton}\n                        </Grid>\n                        </Grid>\n                    </Grid>\n                </div>\n            )\n        } else {\n            content = (\n                <div>{JSON.stringify(this.props.data)}</div>\n            )\n        }\n        // console.log(this.props.data);\n        return (\n            <div>\n                {content}\n            </div>\n        )\n\n    }\n}\n\nexport default connect(mapStateToProps)(AdminDataPieChart);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport axios from 'axios';\nimport './AdminDataPage.css';\n// action imports\nimport { USER_ACTIONS } from '../../redux/actions/userActions';\n// component imports\nimport AdminNav from '../AdminNav/AdminNav';\nimport AdminDataTable from './AdminDataTable/AdminDataTable.js'\nimport AdminDataBarGraph from './AdminDataCharts/AdminDataBarGraph';\nimport AdminDataPieChart from './AdminDataCharts/AdminDataPieChart';\n\nimport Grid from '@material-ui/core/Grid';\n\nconst mapStateToProps = state => ({\n    user: state.user,\n});\n\nclass AdminDataPage extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            chartData: {\n                labels: [],\n                datasets: [],\n            },\n            location: 0\n        }\n    }\n\n    componentDidMount() {\n        this.props.dispatch({ type: USER_ACTIONS.FETCH_USER });\n        this.getSessionData();\n    }\n\n    // componentDidUpdate runs after props and state have changed.\n    //If we arent loading the user call AND we dont have a user, kick us out to home\n    componentDidUpdate() {\n        if (!this.props.user.isLoading && this.props.user.userName === null) {\n            this.props.history.push('/login');\n        } else if (!this.props.user.isLoading && this.props.user.permissions === 1) {\n            this.props.history.push('/select-location');\n        }\n    }\n\n    handleLocationChange = async (event) => {\n        await this.setState({\n            location: event.target.value\n        });\n        await this.getSessionData();\n    }\n\n    getSessionData = () => {\n        console.log('in getSessionData');\n        axios({\n            method: 'GET',\n            url: '/sessions/school-reach/' + this.state.location\n        }).then((response) => {\n            this.setState({\n                datasets: response.data,\n            });\n            console.log('back from server with: ', response.data);\n            this.setData();\n        }).catch((error) => {\n            console.log('error: ', error);\n            alert('There was an error getting sessions data.')\n        })\n    }\n\n    setData = () => {\n        console.log('setData');\n        let dataLabels = [];\n        let dataset = [];\n        let backgroundColor = [];\n        for (let school of this.state.datasets) {\n            dataLabels.push(school.school_name);\n            dataset.push(school.count);\n            let color = this.getRandomColor();\n            backgroundColor.push(color);\n        }\n        this.setState({\n            chartData: {\n                labels: dataLabels,\n                datasets: [{\n                    backgroundColor: backgroundColor,\n                    data: dataset,\n                }]\n            }\n        });\n    }\n\n    getRandomColor = () => {\n        let letters = '0123456789ABCDEF';\n        let color = '#';\n        for (var i = 0; i < 6; i++) {\n          color += letters[Math.floor(Math.random() * 16)];\n        }\n        return color;\n      }\n\n    render() {\n        let content = null;\n        let nav = null;\n\n        if (this.props.user.permissions === 2) {\n            nav = (\n                <AdminNav history={this.props.history} />\n            )\n        }\n\n        if (this.props.user.userName) {\n            content = (\n                <div className=\"data-view-container\">\n                    <Grid container>\n                        <Grid item xs={6}>\n                            <div className=\"graph-container\">\n                                <AdminDataPieChart \n                                    data={this.state.chartData} \n                                    handleLocationChange={this.handleLocationChange}\n                                />\n                            </div>\n                        </Grid>\n                        <Grid item xs={6}>\n                            <div className=\"graph-container\">\n                                <AdminDataBarGraph />\n                            </div>\n                        </Grid>\n                        <Grid item xs={12}>\n                            <div className=\"table-container\">\n                                <AdminDataTable />\n                            </div>\n                        </Grid>\n                    </Grid>\n                </div>\n            )\n        }\n        return (\n            <div>\n                {nav}\n                {content}\n            </div>\n        )\n    }\n}\n\nexport default connect(mapStateToProps)(AdminDataPage);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport axios from '../../../node_modules/axios';\nimport moment from 'moment';\nimport './ManageApplications.css';\nimport RemoveIcon from '@material-ui/icons/DeleteTwoTone';\nimport CheckIcon from '@material-ui/icons/CheckCircleOutlined';\nimport PersonIcon from '@material-ui/icons/PersonOutlined';\n\n\n\n\n// this is an inline-style object variable for the expansion panel summary \"date applied\". \nconst style = {\n    background: 'white',\n    borderRadius: 3,\n    border: 0,\n    marginLeft: '65%',\n    position: 'absolute',\n    color: 'black',\n    height: 28,\n    padding: '0 30px',\n    paddingTop: '4px',\n    boxShadow: 'inset 0 2px 3px 2px lightgrey',\n};\n\nclass ManageAppsExpansionPanel extends Component {\n    constructor(props) {\n        super(props);\n\n        this.state = {\n            isOpen: false,\n            confirmRemoveDialogue: false,\n            removeDialogue: false,\n            locations: [],\n            subjects: [],\n        };\n    };\n\n    componentDidMount = () => {\n        this.getApplicationsLocations();\n        this.getApplicationsSubjects();\n    } \n\n    getApplicationsLocations = () => {\n        axios({\n            method: 'GET',\n            url: '/applications/locations/' + this.props.item.id,\n        }).then((response) => {\n            console.log('in getApplicationsLocations GET route: ', response.data)\n            this.setState({\n                locations: response.data\n            })\n        }).catch((error) => {\n            console.log('Error GETTING application locations from the database: ', error)\n        })\n    } // end getApplicationsLocations\n\n    getApplicationsSubjects = () => {\n        console.log('get application subjects');\n        axios({\n            method: 'GET',\n            url: '/applications/subjects/' + this.props.item.id,\n        }).then((response) => {\n            console.log('in getApplicationsSubjects GET route: ', response.data)\n            this.setState({\n                subjects: response.data\n            })\n        }).catch((error) => {\n            console.log('Error GETTING application subjects from the database: ', error)\n        })\n    } // end getApplicationsSubjects\n\n    // tracks whether each expansion panel is open or closed\n    handleExpansion = (event) => {\n        console.log('in handleExpansion')\n        this.setState({\n            isOpen: !this.state.isOpen,\n        });\n    };\n\n    // handles whether the 'Are you sure you want to remove this application?' dialogue box is open\n    handleConfirmRemoveDialogueOpen = (event) => {\n        this.setState({\n            confirmRemoveDialogue: true,\n        });\n    };\n\n    // handles whether the 'Are you sure you want to remove this application?' dialogue box is closed\n    handleConfirmRemoveDialogueClose = (event) => {\n        this.setState({\n            confirmRemoveDialogue: false,\n        });\n    };\n\n    // handles whether the 'application successfully removed' dialogue box is open\n    handleRemoveDialogueOpen = (event) => {\n        this.setState({\n            removeDialogue: true,\n        });\n    };\n\n    // handles whether the 'application successfully removed' dialogue box is closed\n    handleRemoveDialogueClose = (event) => {\n        this.setState({\n            removeDialogue: false,\n        });\n    };\n\n    acceptApplication = (event) => { \n        // history is available to us because it is passed into the parent component\n        console.log(this.props.item)\n        let locations = [];\n        let subjects = [];\n        for (let location of this.state.locations) {\n            locations.push(String(location.id));\n        }\n        for (let subject of this.state.subjects) {\n            subjects.push(String(subject.id));\n        }\n        this.props.dispatch({\n            type: 'ADD_TUTOR',\n            payload: this.props.item,\n        })\n        this.props.dispatch({\n            type: 'ADD_TUTOR_SUBJECTS',\n            payload: subjects,\n        })\n        this.props.dispatch({\n            type: 'ADD_TUTOR_LOCATIONS',\n            payload: locations,\n        })\n        this.props.history.push('add-tutor')\n    }\n\n    // removes an application from the DOM and updates the active status is the database from 'true' to 'false'\n    removeApplication = (event) => {\n        axios({\n            method: 'PUT',\n            url: `/applications/${this.props.item.id}`\n        }).then((response) => {\n            console.log(response.data);\n            this.handleRemoveDialogueOpen();\n            this.handleConfirmRemoveDialogueClose();\n            this.handleExpansion();\n            this.props.getPendingApplications();\n        }).catch((error) => {\n            console.log(`error removing application from the database: ${error}`);\n        });\n    }; // end removeApplication\n\n    render() {\n        let remove = <RemoveIcon />\n        let check = <CheckIcon />\n        let person = <PersonIcon />\n        console.log(this.props.item.id)\n        return (\n                <ExpansionPanel expanded={this.state.isOpen} onChange={this.handleExpansion}>\n                    <ExpansionPanelSummary style={{backgroundColor: '#F1F6FF'}} expandIcon={<ExpandMoreIcon />}>\n                        <Typography>{person}<b style={{ fontSize: \"24px\", color: \"#5D6874\" }}>{this.props.item.applicant_first_name} {this.props.item.applicant_last_name}</b> <br />\n                        </Typography>\n                        {/* formatting the date using Moment.js */}\n                        <Typography style={style}> &nbsp;Applied: {moment(this.props.item.date).format('MMMM Do, YYYY')}</Typography>\n                    </ExpansionPanelSummary>\n                    <ExpansionPanelDetails>\n                        <Typography>\n                        <h5>Contact:</h5>\n                            {this.props.item.applicant_address} <br />\n                            {this.props.item.applicant_city}, {this.props.item.applicant_state} {this.props.item.applicant_zipcode}<br />\n                            {this.props.item.applicant_email}<br />\n                            {this.props.item.applicant_cell_phone}<br />\n                        <br /> <h5>Application&nbsp;Information:</h5>\n                            <b>Qualifications:</b> {this.props.item.applicant_qualifications}<br />\n                            <b>Experience:</b> {this.props.item.applicant_experience}<br />\n                            <b>Age group: </b>{this.props.item.applicant_age_group}<br />\n                            <b>Resume:</b> {this.props.item.resume}<br />        \n                            <br /><b>Subject(s):</b> <br />\n                            <ul style={{ listStyleType: 'none' }}>\n                            {this.state.subjects.map((subjects) => {\n                                return(\n                                    <li key={subjects.id}>{subjects.subjects}</li>\n                                )\n                            })}\n                            </ul><br />\n                            \n                            <b>Preferred Location(s):</b> <br />\n                            <ul style={{ listStyleType: 'none' }}>\n                            {this.state.locations.map((location) => {\n                                return(\n                                    <li key={location.id}>{location.location_name}</li>\n                                )\n                            })}\n                            </ul><br />\n                            \n                            {/* material dialogue 1 -- confirm remove*/}\n                            <Dialog\n                                open={this.state.confirmRemoveDialogue}\n                                onClose={this.handleConfirmRemoveDialogueClose}\n                                aria-labelledby=\"alert-dialog-title\"\n                                aria-describedby=\"alert-dialog-description\"\n                            >\n                                <DialogContent>\n                                    <DialogContentText id=\"alert-dialog-description\">\n                                        <p>Are you sure you want to remove {this.props.item.applicant_first_name}'s application?</p>\n                                    </DialogContentText>\n                                </DialogContent>\n                                <DialogActions>\n                                    <Button onClick={this.handleConfirmRemoveDialogueClose} color=\"primary\">\n                                        Cancel\n                                    </Button>\n                                    <Button variant=\"contained\" color=\"primary\" onClick={this.removeApplication} color=\"primary\" autoFocus>\n                                        Yes\n                                    </Button>\n                                </DialogActions>\n                            </Dialog>\n                            {/* end confirmRemoveDialogue */}\n\n                            {/* material dialogue 2 -- alert user of successful removal */}\n                            <Dialog\n                                open={this.state.removeDialogue}\n                                onClose={this.handleRemoveDialogueClose}\n                                aria-labelledby=\"alert-dialog-title\"\n                                aria-describedby=\"alert-dialog-description\"\n                            >\n                                <DialogContent>\n                                    <DialogContentText id=\"alert-dialog-description\">\n                                        Application successfully removed!\n                                </DialogContentText>\n                                </DialogContent>\n                            </Dialog>\n                        </Typography>\n                    <div style={{ display: 'flex', width: '100%', justifyContent: 'flex-end', alignItems: 'flex-end' }}>\n                        {/* on click of remove, send confirmation prompt. if okay, remove app.   */}\n                        <Button onClick={this.handleConfirmRemoveDialogueOpen} variant=\"contained\" color=\"secondary\" style={{ height: '37px', marginRight: '5px' }}>{remove}Remove</Button>\n                        <Button variant=\"contained\" color=\"primary\" onClick={this.acceptApplication} style={{ height: '37px'}}>{check}Accept</Button>\n                    </div>\n                    </ExpansionPanelDetails>\n                </ExpansionPanel>\n        );\n    };\n};\n\nexport default connect() (ManageAppsExpansionPanel);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n// action imports\nimport { USER_ACTIONS } from '../../redux/actions/userActions';\n// component imports\nimport AdminNav from '../AdminNav/AdminNav';\nimport axios from '../../../node_modules/axios';\nimport ManageAppsExpansionPanel from './ManageAppsExpansionPanel';\nimport './ManageApplications.css';\n\nconst mapStateToProps = state => ({\n    user: state.user,\n    pendingApplications: state.pendingApplications,\n});\n\nclass ManageApplicationsPage extends Component {\n    componentDidMount = () => {\n        this.props.dispatch({ type: USER_ACTIONS.FETCH_USER });\n        this.getPendingApplications();\n    } // end componentDidMount\n\n    // componentDidUpdate runs after props and state have changed.\n    //If we arent loading the user call AND we dont have a user, kick us out to home\n    componentDidUpdate() {\n        if (!this.props.user.isLoading && this.props.user.userName === null) {\n            this.props.history.push('/login');\n        } else if (!this.props.user.isLoading && this.props.user.permissions === 1) {\n            this.props.history.push('/select-location');\n        }\n    } // end componentDidUpdate\n\n    //GET all applications from the database\n    getPendingApplications = () => {\n        axios({\n            method: 'GET',\n            url: '/applications',\n        }).then((response) => {\n            console.log(response.data);\n            this.props.dispatch({\n                payload: response.data,\n                type: 'DISPLAY_APPLICATIONS',\n            })\n        }).catch((error) => {\n            console.log('Error GETTING applications from the database: ', error)\n        })\n    } // end getPendingApplications\n\n    render() {\n        let content = null;\n        let nav = null;\n        let title = null;\n\n        console.log(this.props.pendingApplications)\n\n        if (this.props.pendingApplications.length > 1) {\n            title = <h1>{this.props.pendingApplications.length} Pending Applications</h1>\n        } else if (this.props.pendingApplications.length > 0){\n            title = <h1>{this.props.pendingApplications.length} Pending Application</h1>\n        } else {\n            title = <h1>There are no pending applications at this time</h1>\n        }\n\n        if (this.props.user.permissions === 2) {\n            nav = (\n                <AdminNav history={this.props.history} />\n            )\n        }\n\n        if (this.props.user.userName) {\n            content = (\n                <div className=\"applications-view-container\">\n                    {title}\n                    <br />\n                    <ul>\n                        {/* pendingApplications is held in the ApplicationsReducer */}\n                        {/* we are mapping over each application in the database */}\n                        {this.props.pendingApplications.map((item, i) => {\n                            return(\n                                // history must be passed through the main component before the subcomponent\n                                // can access it\n                                <ManageAppsExpansionPanel key={i} history={this.props.history} getPendingApplications={this.getPendingApplications} item={item}/>\n                            )\n                        })}\n                    </ul>\n                </div>\n            )\n        }\n        return (\n            <div>\n                {nav}\n                {content}\n            </div>\n        )\n    }\n} // end ManageApplicationsPage component\n\nexport default connect(mapStateToProps)(ManageApplicationsPage);","import React, { Component } from 'react'\nimport Select from 'react-select';\n\n\nclass StateSelect extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            states: [\n                'AL',\n                'AK',\n                'AZ',\n                'AR',\n                'CA',\n                'CO',\n                'CT',\n                'DE',\n                'FL',\n                'GA',\n                'HI',\n                'ID',\n                'IL',\n                'IN',\n                'IA',\n                'KS',\n                'KY',\n                'LA',\n                'ME',\n                'MD',\n                'MA',\n                'MI',\n                'MN',\n                'MS',\n                'MO',\n                'MT',\n                'NE',\n                'NV',\n                'NH',\n                'NJ',\n                'NM',\n                'NY',\n                'NC',\n                'ND',\n                'OH',\n                'OK',\n                'OR',\n                'PA',\n                'RI',\n                'SC',\n                'SD',\n                'TN',\n                'TX',\n                'UT',\n                'VT',\n                'VA',\n                'WA',\n                'WV',\n                'WI',\n                'WY'\n            ]\n        }\n    }\n\n    // handle state select change\n    handleChange = (value) => {\n        this.props.handleApplicantStateChange(value.value);\n    }\n\n    render() {\n        return (\n            <Select\n                options={\n                    this.state.states.map((state) => ({\n                        value: state,\n                        label: state,\n                    }))\n                }\n                onChange={this.handleChange}\n                placeholder=\"State\"\n                name=\"applicant_state\"\n                defaultInputValue={this.props.defaultState}\n            />\n\n        )\n    }\n}\n\n\nexport default StateSelect;","import React, { Component } from 'react';\nimport StateSelect from '../../NewApplicationPage/StateSelect';\nimport { connect } from 'react-redux';\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nclass AddLocationsDialog extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      open: false,\n      locationToAdd: {\n        location_name: '',\n        location_address: '',\n        location_city: '',\n        location_state: 'MN',\n        location_zipcode: '',\n        location_phone: '',\n      }//end locationToAdd\n    }//end state\n  }//end constructor\n\n  handleStateDropDownChange = (value) => {\n    //updates with location from drop down\n    this.setState({\n      locationToAdd: { ...this.state.locationToAdd, location_state: value }\n    });//end setState\n  }//end handleLocationStateChange\n\n  saveLocation = () => {\n    //when ok is clicked this will POST data to server and save new location\n    let action = {\n      type: 'SAVE_LOCATIONS',\n      payload: this.state.locationToAdd,\n    }//end action\n    this.props.dispatch(action);\n    this.props.addLocationClose();\n  }//end handleAddLocation\n\n  handleAlertOpen = () => {\n    //when user adds a location and presses save a confirmation will appear\n    this.setState({ alert: true });\n  }//end handleAlertOpen\n\n  handleAlertClose = () => {\n    //after pressing okay alert dialog will close\n    this.setState({ alert: false });\n  }//end handleAlertClose\n\n  handleAddLocationChange = (event) => {\n    //handles changes to input fields\n    this.setState({\n      locationToAdd: {\n        ...this.state.locationToAdd,\n        [event.target.name]: event.target.value\n      }//end locationToAdd\n    });//end setState\n  }//end handleAddLocationChange\n\n  render() {\n    return (\n      <div>\n        <React.Fragment>\n          <Dialog\n            open={this.props.open}\n            onClose={this.handleClose}\n            aria-labelledby=\"form-dialog-title\"\n          >\n            <DialogTitle id=\"form-dialog-title\">Add Location</DialogTitle>\n            <DialogContent>\n              <DialogContentText>\n                Add Location Information\n          </DialogContentText>\n              <TextField\n                autoFocus\n                margin=\"dense\"\n                name=\"location_name\"\n                label=\"Location Name\"\n                type=\"text\"\n                fullWidth\n                value={this.state.locationToAdd.location_name}\n                onChange={this.handleAddLocationChange}\n                required\n              />\n              <TextField\n                autoFocus\n                margin=\"dense\"\n                name=\"location_address\"\n                label=\"Address\"\n                type=\"text\"\n                fullWidth\n                value={this.state.locationToAdd.location_address}\n                onChange={this.handleAddLocationChange}\n                required\n              />\n              <TextField\n                autoFocus\n                margin=\"dense\"\n                name=\"location_city\"\n                label=\"City\"\n                type=\"text\"\n                fullWidth\n                value={this.state.locationToAdd.location_city}\n                onChange={this.handleAddLocationChange}\n                required\n              />\n              <StateSelect\n                handleApplicantStateChange={this.handleStateDropDownChange}\n                defaultState={this.state.locationToAdd.location_state}\n              />\n              <TextField\n                autoFocus\n                margin=\"dense\"\n                name=\"location_zipcode\"\n                label=\"Zipcode\"\n                type=\"text\"\n                fullWidth\n                value={this.state.locationToAdd.location_zipcode}\n                onChange={this.handleAddLocationChange}\n                required\n              />\n              <TextField\n                autoFocus\n                margin=\"dense\"\n                name=\"location_phone\"\n                label=\"Phone\"\n                type=\"text\"\n                fullWidth\n                value={this.state.locationToAdd.location_phone}\n                onChange={this.handleAddLocationChange}\n                required\n              />\n            </DialogContent>\n            <DialogActions>\n              <Button onClick={this.props.addLocationClose} variant=\"contained\">\n                Cancel\n          </Button>\n              <Button onClick={this.saveLocation} variant=\"contained\" color=\"primary\">\n                Save\n          </Button>\n            </DialogActions>\n          </Dialog>\n        </React.Fragment>\n      </div>\n    );\n  }//end render\n}//end Component\n\nexport default connect()(AddLocationsDialog);","import React, { Component } from 'react';\nimport StateSelect from '../../NewApplicationPage/StateSelect'; \nimport { connect } from 'react-redux'\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport EditIcon from '@material-ui/icons/EditOutlined';\n\nconst style = {\n  marginRight: '80%',\n  justifyContent: 'right',\n  height: '37px',\n}//end style\n\nconst mapStateToProps = state => ({\n  locations: state.locations.locations,\n});//end mapStateToProps\n\n class EditLocationsDialog extends Component {\n   constructor (props) {\n     super(props);\n\n     this.state = {\n       alert: false,\n       open: false,\n       locationToEdit: {\n        id: this.props.location.id,\n        location_name: this.props.location.location_name,\n        location_address: this.props.location.location_address,\n        location_city: this.props.location.location_city,\n        location_state: this.props.location.location_state,\n        location_zipcode: this.props.location.location_zipcode,\n        location_phone: this.props.location.location_phone,\n      }//end locationToEdit\n     }//end state\n   }//end constructor\n\n  openDialog = () => {\n    //this when edit button is clicked will open dialog to make changes to input fields\n    let action = {\n      type: 'EDIT_LOCATION',\n      payload: this.props.location,\n  }//end action\n  this.props.dispatch(action);\n    this.setState({\n      open: true,\n    });//end setState\n  }//end openDialog\n\n  handleSaveChange = () => {\n    //this when the save button is clicked will save changed made\n    //and update the DOM and server\n    let action = {\n      type: 'MODIFY_LOCATIONS',\n      payload: {...this.state.locationToEdit},\n    }//end action\n    this.props.dispatch(action);\n    this.handleClose();\n    this.handleEditAlertOpen();\n  }//end saveLocationsDialog\n\n  handleClose = () => {\n    //sets edit dialog box to close initially\n    this.setState({\n      open: false,\n    });//end setState\n  }//end handleClose\n\n  handleChange = (event) => {\n    //this will allow changes to be added to edit input fields\n    this.setState({\n      locationToEdit: {\n        ...this.state.locationToEdit,\n        [event.target.name]: event.target.value\n      }//end locationToEdit\n    });//end setState\n  }//end handleChange\n\n  handleEditAlertOpen = () => {\n    //when user Edits a location and presses save a alert dialog will appear\n    this.setState({ alert: true});\n  }//end handleEditAlertOpen\n\n  handleEditAlertClose = () => {\n    //after pressing okay alert dialog will close\n    this.setState({ alert: false});\n    this.props.dispatch({type: 'GET_LOCATIONS'})\n  }//end handleEditAlertClose\n\n  handleStateDropDownChange = (value) => {\n    //updates with location from drop down\n    this.setState({\n        locationToEdit: { ...this.state.locationToEdit, location_state: value }\n    });//end setState\n}//end handleLocationStateChange\n\n  render() {\n\n    let edit = <EditIcon />\n\n    return (\n      <div>\n        <React.Fragment>\n        <Button style={style} onClick={this.openDialog} variant=\"contained\" color=\"default\">{edit}Edit</Button>\n        <Dialog\n        open={this.state.open}\n        onClose={this.handleClose}\n        aria-labelledby=\"form-dialog-title\"\n        >\n        <DialogTitle id=\"form-dialog-title\">Edit Location Information</DialogTitle>\n        <DialogContent>\n          <DialogContentText>\n            Please enter changes here:\n          </DialogContentText>\n          <TextField\n              required\n              autoFocus\n              margin=\"dense\"\n              name=\"location_name\"\n              label=\"Location Name\"\n              type=\"text\"\n              fullWidth\n              value={this.state.locationToEdit.location_name}\n              onChange={this.handleChange}\n            />\n            <TextField\n              required\n              autoFocus\n              margin=\"dense\"\n              name=\"location_address\"\n              label=\"Address\"\n              type=\"text\"\n              fullWidth\n              value={this.state.locationToEdit.location_address}\n              onChange={this.handleChange}\n            />\n            <TextField\n              required\n              autoFocus\n              margin=\"dense\"\n              name=\"location_city\"\n              label=\"City\"\n              type=\"text\"\n              fullWidth\n              value={this.state.locationToEdit.location_city}\n              onChange={this.handleChange}\n            />\n            <StateSelect \n            handleApplicantStateChange={this.handleStateDropDownChange}\n            defaultState={this.state.locationToEdit.location_state}\n            />\n            <TextField\n              required\n              autoFocus\n              margin=\"dense\"\n              name=\"location_zipcode\"\n              label=\"Zipcode\"\n              type=\"text\"\n              fullWidth\n              value={this.state.locationToEdit.location_zipcode}\n              onChange={this.handleChange}\n            />\n            <TextField\n              required\n              autoFocus\n              margin=\"dense\"\n              name=\"location_phone\"\n              label=\"Phone\"\n              type=\"text\"\n              fullWidth\n              value={this.state.locationToEdit.location_phone}\n              onChange={this.handleChange}\n            />\n        </DialogContent>\n        <DialogActions>\n          <Button onClick={this.handleClose} color=\"secondary\">\n            Cancel\n          </Button>\n          <Button variant=\"contained\" color=\"primary\" onClick={this.handleSaveChange} color=\"primary\">\n            Save\n          </Button>\n        </DialogActions>\n      </Dialog>\n      </React.Fragment>\n      </div>\n    );\n  }//end render\n}//end Component\n\nexport default connect(mapStateToProps)(EditLocationsDialog);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport EditLocationsDialog from '../EditLocationsDialog/EditLocationsDialog';\nimport Button from '@material-ui/core/Button';\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport LockIcon from '@material-ui/icons/LockOutlined';\nimport UnlockIcon from '@material-ui/icons/LockOpenOutlined';\nimport LocationIcon from '@material-ui/icons/LocalLibraryOutlined';\nimport GPSIcon from '@material-ui/icons/RoomOutlined';\n\n\n\n\n\n// const style = {\n//     marginRight: '80%',\n//     justifyContent: 'right',\n//     float: 'right'\n//   }//end style\n\nclass LocationExpansionPanel extends Component {\n\n    handleEditClick = () => {\n        //this handles the edit buttons in the expansion panels\n        this.props.handleEditDialogOpen();\n        let action = {\n            type: 'EDIT_LOCATION',\n            payload: this.props.location,\n        }//end action\n        this.props.dispatch(action);\n    }//end handleEditClick\n\n    toggleLocationStatus = () => {\n        //when activate/deactivate button is pressed will toggle\n        //location to true or false\n        let action = {\n          type: 'TOGGLE_LOCATIONS',\n          payload: this.props.location.id\n        }//end action\n        this.props.dispatch(action);\n      }//end toggleLocationStatus\n      \n    render() {\n        let toggleButton = null;\n        let deactive = <LockIcon />\n        let active = <UnlockIcon />\n       \n    if (this.props.location.active === false) {\n      toggleButton = (\n        <Button style={{height: '37px'}} onClick={this.toggleLocationStatus} variant=\"contained\" color=\"default\">{active}Activate</Button>\n      );\n    } else {\n      toggleButton = (\n        <Button style={{height: '37px'}} onClick={this.toggleLocationStatus} variant=\"contained\" color=\"secondary\">{deactive}Deactivate</Button>\n      )\n    }//end if/else\n\n        return (\n            <ExpansionPanel>\n                <ExpansionPanelSummary expandIcon={<ExpandMoreIcon />}>\n                    <Typography><b style={{ fontSize: \"24px\", color: \"#5D6874\" }}><LocationIcon />&nbsp;{this.props.location.location_name}</b><br />\n                    <span style={{color: '#5D6874'}}><GPSIcon /></span> {this.props.location.location_address}<br />\n                    <div style={{marginLeft: '30px'}}>{`${this.props.location.location_city}, ${this.props.location.location_state} ${this.props.location.location_zipcode} `}<br />\n                        {this.props.location.location_phone}</div>\n                    </Typography>\n                </ExpansionPanelSummary>\n                <ExpansionPanelDetails>\n                <div style={{ display: 'flex', width: '100%', justifyContent: 'left', alignItems: 'flex-end' }}>\n                        <EditLocationsDialog location={this.props.location} />&nbsp;\n                        {toggleButton}\n                    </div>\n                </ExpansionPanelDetails>\n            </ExpansionPanel>\n        );\n    }//end render\n}//end Component\n\nexport default connect()(LocationExpansionPanel);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nconst mapStateToProps = state => ({\n    alert: state.alert\n});\n\nclass AlertDialog extends Component {\n\n    handleClose = () => {\n        //this handles closing of the edit alert\n        this.props.dispatch({\n            type: 'CLOSE_ALERT'\n        })\n        this.props.dispatch({type: this.props.alert.dispatch});\n    }//end handleClose\n\n    render() {\n        return (\n            <Dialog\n                open={this.props.alert.open}\n            >\n                <DialogTitle id=\"alert-dialog-title\">{this.props.alert.title}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText id=\"alert-dialog-description\">\n                        {this.props.alert.content}\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button variant=\"contained\" color=\"primary\" onClick={this.handleClose} color=\"primary\" autoFocus>\n                        Ok\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        );\n    }//end render\n}//end EditLocationsAlert Component\n\nexport default connect(mapStateToProps)(AlertDialog);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport './ManageLocationsPage.css';\n// action imports\nimport { USER_ACTIONS } from '../../redux/actions/userActions';\n// component imports\nimport AdminNav from '../AdminNav/AdminNav';\nimport AddLocationsDialog from './AddLocationsDialog/AddLocationsDialog';\nimport LocationExpansionPanel from './LocationExpansionPanel/LocationExpansionPanel';\nimport Button from '@material-ui/core/Button';\nimport AlertDialog from '../AlertDialog/AlertDialog';\n\nconst style = {\n    marginLeft: '85%',\n    marginBottom: '10px',\n}//end style  \n\nconst mapStateToProps = state => ({\n    user: state.user,\n    locations: state.locations.locations\n});//end mapStateToProps\n\nclass ManageLocationsPage extends Component {\n    constructor (props) {\n        super(props);\n        this.state = {\n            locations: [],\n            addDialogOpen: false,\n            editDialogOpen: false,\n            locationToEdit: {\n                location_name: '',\n                location_address: '',\n                location_city: '',\n                location_state: '',\n                location_zipcode: '',\n                location_phone: ''\n            },//end locationsToEdit\n        }//end state\n    }//end constructor\n\n    componentDidMount() {\n        this.props.dispatch({ type: USER_ACTIONS.FETCH_USER });\n        this.getLocations();\n    }//end componentDidMount\n\n    // componentDidUpdate runs after props and state have changed.\n    //If we arent loading the user call AND we dont have a user, kick us out to home\n    componentDidUpdate() {\n        if (!this.props.user.isLoading && this.props.user.userName === null) {\n            this.props.history.push('/login');\n        } else if (!this.props.user.isLoading && this.props.user.permissions === 1) {\n            this.props.history.push('/select-location');\n        }//end if else\n    }//end componentDidUpdate\n\n    addLocationOpen = () => {\n        //this handles opening dialog for add locations button\n        console.log('addLocationOpen');\n        this.setState({\n            addDialogOpen: true,\n        });//end setState\n    }//end addLocationOpen\n\n    addLocationClose = () => {\n        //this will manage closing the dialog in add location\n        this.setState({\n          addDialogOpen: false,\n        });//end setState\n      }//end handleClose\n\n    handleEditDialogOpen = (location) => {\n        //this handles openining the edit dialog\n        console.log('handleEditDialogOpen');\n        this.setState({\n            editDialogOpen: true,\n        });//end setState\n    }//end handleEditDialogOpen\n\n    handleEditDialogClose = () => {\n        //this handles closing the edit dialog\n        this.setState({\n            editDialogOpen: false,\n        });//end setState\n    }//end handleEditDialogClose\n\n    handleEditChange = (event) => {\n        //this allows edits to the dialog fields\n        console.log('in handleEditChange', event);\n        this.setState({\n            [event.target.name]: event.target.value\n        });//end setState\n    }//end handleEditChange\n\n    getLocations() {\n        //Get location data from server\n        this.props.dispatch({type: 'GET_LOCATIONS'})\n    }//end getLocations\n\n    render() {\n        let content = null;\n        let nav = null;\n\n        if (this.props.user.permissions === 2) {\n            nav = (\n                <AdminNav history={this.props.history} />\n            )\n        }\n\n        if (this.props.user.userName) {\n            content = (\n                <div className=\"locations-view-container\">\n                    <div>\n                        <h1>Manage Tutoring Locations</h1>\n                    </div>\n                    <div>\n                        <Button style={style} variant=\"contained\" color=\"primary\" onClick={this.addLocationOpen}>+ Add Location</Button>\n                        <AddLocationsDialog \n                        open = {this.state.addDialogOpen}\n                        addLocationClose = {this.addLocationClose} />\n                    </div>\n                    {this.props.locations.map((location, i)=>{\n                        console.log(location);\n                        \n                        return (\n                            <React.Fragment key={location.id}> \n                            <LocationExpansionPanel key={i} location={location} getLocations={this.getLocations}/>\n                            </React.Fragment>\n                        )\n                    })} \n                </div>\n            )\n        }\n        return (\n            <div>\n                {nav}\n                {content}\n                <AlertDialog />\n            </div>\n        )\n    }//end render\n}//end Component\n\nexport default connect(mapStateToProps)(ManageLocationsPage);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n// Material UI imports\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport RemoveIcon from '@material-ui/icons/DeleteTwoTone';\n\nconst style = {\n    float: 'left',\n    marginRight: '5px',\n    \n}\nclass RemoveTutorDialog extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            open: false,\n            confirmationOpen: false,\n        }\n    }\n\n    handleOpen = () => {\n        this.setState({ open: true });\n    };\n\n    handleClose = () => {\n        this.setState({ open: false });\n    };\n\n    handleConfirmationOpen = () => {\n        this.setState({ confirmationOpen: true });\n    };\n\n    handleConfirmationClose = () => {\n        this.setState({ confirmationOpen: false });\n        this.props.dispatch({type: 'GET_TUTORS'});\n    };\n\n    handleTutorDelete = () => {\n        let action = {\n            type: 'DELETE_TUTOR',\n            payload: {id: this.props.tutor.user_id}\n        };\n        this.props.dispatch(action);\n        this.handleClose();\n        this.handleConfirmationOpen();\n    }\n\n    render() {\n        let remove = <RemoveIcon />\n\n        return (\n            <div>\n                <Button style={style} color=\"secondary\" variant=\"contained\" onClick={this.handleOpen}>{remove}Remove</Button>\n                <Dialog\n                    open={this.state.open}\n                    onClose={this.handleClose}\n                >\n                    <DialogContent>\n                        <DialogContentText>\n                            Are you sure you would like to remove {this.props.tutor.user_first_name} {this.props.tutor.user_last_name} from the active tutors?\n                        </DialogContentText>\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color=\"secondary\">\n                            Cancel\n                        </Button>\n                        <Button variant=\"contained\" color=\"primary\" onClick={this.handleTutorDelete} color=\"primary\" autoFocus>\n                            Yes\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n                <Dialog\n                    open={this.state.confirmationOpen}\n                    onClose={this.handleConfirmationClose}\n                >\n                    <DialogContent>\n                        <DialogContentText id=\"alert-dialog-description\">\n                            Tutor successfully removed!\n                        </DialogContentText>\n                    </DialogContent>\n                </Dialog>\n            </div>\n        )\n    }\n}\n\nexport default connect()(RemoveTutorDialog);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Axios from 'axios';\n// Material UI imports\nimport Button from '@material-ui/core/Button';\nimport TextField from '@material-ui/core/TextField';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogTitle from '@material-ui/core/DialogTitle';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport EditIcon from '@material-ui/icons/EditOutlined';\n\n// component imports\nimport StateSelect from '../NewApplicationPage/StateSelect';\n\nconst mapStateToProps = state => ({\n    tutors: state.tutors,\n    subjects: state.subjects,\n    locations: state.locations.locations\n});\n\nclass EditTutorDialog extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            open: false,\n            editedTutor: {\n                user_first_name: this.props.tutor.user_first_name,\n                user_last_name: this.props.tutor.user_last_name,\n                user_address: this.props.tutor.user_address,\n                user_city: this.props.tutor.user_city,\n                user_state: this.props.tutor.user_state,\n                user_zipcode: this.props.tutor.user_zipcode,\n                user_cell_phone: this.props.tutor.user_cell_phone,\n                user_email: this.props.tutor.user_email,\n                user_qualifications: this.props.tutor.user_qualifications,\n                user_experience: this.props.tutor.user_experience,\n                user_age_group: this.props.tutor.user_age_group,\n                id: this.props.tutor.id\n            },\n            selectedLocations: this.props.selectedLocations,\n            selectedSubjects: this.props.selectedSubjects,\n        };\n    }\n\n    componentDidMount = () => {\n        this.props.dispatch({ type: 'GET_LOCATIONS' });\n        this.props.dispatch({ type: 'GET_SUBJECTS' });\n        this.getTutorLocations();\n        this.getTutorSubjects();\n    }\n\n    getTutorLocations = () => {\n        Axios({\n            method: 'GET',\n            url: `/tutors/locations/${this.props.tutor.id}`\n        }).then((response) => {\n            let selectedLocations = [];\n            for (let location of response.data) {\n                selectedLocations.push(String(location.id));\n            }\n            this.setState({\n                selectedLocations: selectedLocations,\n            });\n        }).catch((error) => {\n            console.log('get locations error: ', error);\n        })\n    }\n\n    getTutorSubjects = () => {\n        Axios({\n            method: 'GET',\n            url: `/tutors/subjects/${this.props.tutor.id}`\n        }).then((response) => {\n            let selectedSubjects = [];\n            for (let subject of response.data) {\n                selectedSubjects.push(String(subject.id));\n            }\n            console.log(selectedSubjects);\n            this.setState({\n                selectedSubjects: selectedSubjects,\n            });\n        }).catch((error) => {\n            console.log('get subjects error: ', error);\n        })\n    }\n\n    handleClickOpen = () => {\n        this.setState({ open: true });\n    };\n\n    handleClose = () => {\n        this.props.getTutorLocations();\n        this.props.getTutorSubjects();\n        this.setState({ open: false });\n    };\n\n    handleStateChange = (event) => {\n        this.setState({\n            editedTutor: {\n                ...this.state.editedTutor,\n                [event.target.name]: event.target.value\n            }\n        })\n    }\n\n    handleUserStateChange = (value) => {\n        this.setState({\n            editedTutor: {\n                ...this.state.editedTutor,\n                user_state: value\n            }\n        })\n    }\n\n    handleSave = () => {\n        console.log(this.state.editedTutor);\n        let subjects = {\n            subjects: this.state.selectedSubjects,\n            id: this.state.editedTutor.id\n        }\n        let locations = {\n            locations: this.state.selectedLocations,\n            id: this.state.editedTutor.id\n        }\n        this.props.dispatch({\n            type: 'UPDATE_TUTOR',\n            payload: this.state.editedTutor\n        })\n        this.props.dispatch({\n            type: 'EDIT_TUTOR_SUBJECTS',\n            payload: subjects\n        });\n        this.props.dispatch({\n            type: 'EDIT_TUTOR_LOCATIONS',\n            payload: locations\n        });\n        this.handleClose();\n    }\n\n    handleSubjectCheckbox = (event, isChecked) => {\n        console.log('clicked: ', event.target);\n        if (isChecked) {\n            this.setState({\n                selectedSubjects: [...this.state.selectedSubjects, event.target.value]\n            });\n        } else if (isChecked === false) {\n            this.setState({\n                selectedSubjects: this.state.selectedSubjects.filter((id) => id !== event.target.value)\n            });\n        }\n    }\n\n    handleLocationsCheckbox = (event, isChecked) => {\n        if (isChecked) {\n            this.setState({\n                selectedLocations: [...this.state.selectedLocations, event.target.value]\n            });\n        } else if (isChecked === false) {\n            this.setState({\n                selectedLocations: this.state.selectedLocations.filter((id) => id !== event.target.value)\n            });\n        }\n    }\n\n    render() {\n        let edit = <EditIcon />\n        return (\n            <div>\n                <Button style={{ marginRight: '5px' }} color=\"default\" variant=\"contained\" onClick={this.handleClickOpen}>{edit}Edit</Button>\n                <Dialog\n                    open={this.state.open}\n                    onClose={this.handleClose}\n                >\n                    <DialogTitle id=\"form-dialog-title\">Edit Tutor</DialogTitle>\n                    <DialogContent>\n                        <TextField\n                            label=\"First Name\"\n                            name=\"user_first_name\"\n                            onChange={this.handleStateChange}\n                            value={this.state.editedTutor.user_first_name}\n                            fullWidth\n                        />\n                        <TextField\n                            label=\"Last Name\"\n                            name=\"user_last_name\"\n                            onChange={this.handleStateChange}\n                            value={this.state.editedTutor.user_last_name}\n                            fullWidth\n                        />\n                        <TextField\n                            label=\"Address\"\n                            name=\"user_address\"\n                            onChange={this.handleStateChange}\n                            value={this.state.editedTutor.user_address}\n                            fullWidth\n                        />\n                        <TextField\n                            label=\"City\"\n                            name=\"user_city\"\n                            onChange={this.handleStateChange}\n                            value={this.state.editedTutor.user_city}\n                            fullWidth\n                        />\n                        <StateSelect handleApplicantStateChange={this.handleUserStateChange} />\n                        <TextField\n                            label=\"Zipcode\"\n                            name=\"user_zipcode\"\n                            onChange={this.handleStateChange}\n                            value={this.state.editedTutor.user_zipcode}\n                            fullWidth\n                        />\n                        <TextField\n                            label=\"Phone Number\"\n                            name=\"user_cell_phone\"\n                            onChange={this.handleStateChange}\n                            value={this.state.editedTutor.user_cell_phone}\n                            fullWidth\n                        />\n                        <TextField\n                            label=\"Email Address\"\n                            name=\"user_email\"\n                            onChange={this.handleStateChange}\n                            value={this.state.editedTutor.user_email}\n                            type=\"email\"\n                            fullWidth\n                        />\n                        <TextField\n                            label=\"Qualifications\"\n                            name=\"user_qualifications\"\n                            onChange={this.handleStateChange}\n                            value={this.state.editedTutor.user_qualifications}\n                            fullWidth\n                        />\n                        <TextField\n                            label=\"Experience\"\n                            name=\"user_experience\"\n                            onChange={this.handleStateChange}\n                            value={this.state.editedTutor.user_experience}\n                            fullWidth\n                        />\n                        <TextField\n                            label=\"Age Group\"\n                            name=\"user_age_group\"\n                            onChange={this.handleStateChange}\n                            value={this.state.editedTutor.user_age_group}\n                            fullWidth\n                        />\n                        <h3>Subject Area(s) of Interest</h3>\n                        {this.props.subjects.map((subject, index) => {\n                            let content = null;\n                            if (this.state.selectedSubjects.includes(String(subject.id))) {\n                                content = (\n                                    <label key={index}> {subject.subjects}\n                                        <Checkbox\n                                            checked=\"true\"\n                                            name=\"applicant_subjects\"\n                                            key={subject.id}\n                                            label={subject.subjects}\n                                            value={subject.id}\n                                            onChange={this.handleSubjectCheckbox}\n                                            color=\"primary\"\n                                        />\n                                        <br />\n                                    </label>\n                                )\n                            } else {\n                                content = (\n                                    <label key={index}> {subject.subjects}\n                                        <Checkbox\n                                            name=\"applicant_subjects\"\n                                            key={subject.id}\n                                            label={subject.subjects}\n                                            value={subject.id}\n                                            onChange={this.handleSubjectCheckbox}\n                                            color=\"primary\"\n                                        />\n                                        <br />\n                                    </label>\n                                )\n                            }\n                            return (\n                                <React.Fragment>\n                                    {content}\n                                </React.Fragment>\n                            )\n                        })}\n\n                        <h3>Requested Locations</h3>\n                        {this.props.locations.map((location, index) => {\n                            let content = null;\n                            if (this.state.selectedLocations.includes(String(location.id))) {\n                                content = (\n                                    <label key={index}> {location.location_name}\n                                        <Checkbox\n                                            checked=\"true\"\n                                            name=\"applicant_locations\"\n                                            key={location.id}\n                                            label={location.location_name}\n                                            value={`${location.id}`}\n                                            onChange={this.handleLocationsCheckbox}\n                                            color=\"primary\"\n                                        />\n                                    </label>\n                                )\n                            } else {\n                                content = (\n                                    <label key={index}> {location.location_name}\n                                        <Checkbox\n                                            name=\"applicant_locations\"\n                                            key={location.id}\n                                            label={location.location_name}\n                                            value={`${location.id}`}\n                                            onChange={this.handleLocationsCheckbox}\n                                            color=\"primary\"\n                                        />\n                                    </label>\n                                )\n                            }\n                            return (\n                                <React.Fragment>\n                                    {content}\n                                </React.Fragment>\n                            )\n                        })}\n                    </DialogContent>\n                    <DialogActions>\n                        <Button onClick={this.handleClose} color=\"secondary\">\n                            Cancel\n                        </Button>\n                        <Button variant=\"contained\" color=\"primary\" onClick={this.handleSave} color=\"primary\">\n                            Save\n                        </Button>\n                    </DialogActions>\n                </Dialog>\n            </div>\n        )\n    }\n}\n\nexport default connect(mapStateToProps)(EditTutorDialog);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport Axios from 'axios';\n// Material UI imports\nimport ExpansionPanel from '@material-ui/core/ExpansionPanel';\nimport ExpansionPanelSummary from '@material-ui/core/ExpansionPanelSummary';\nimport ExpansionPanelDetails from '@material-ui/core/ExpansionPanelDetails';\nimport Typography from '@material-ui/core/Typography';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\n// Material UI imports\nimport { Button } from '@material-ui/core';\nimport AdminIcon from '@material-ui/icons/VerifiedUserRounded';\nimport TransferIcon from '@material-ui/icons/BlockOutlined';\nimport PersonIcon from '@material-ui/icons/PersonOutlined';\n// component importsVerifiedUserRoundedVerifiedUserRounded\nimport RemoveTutorDialog from './RemoveTutorDialog';\nimport EditTutorDialog from './EditTutorDialog';\n\n\nconst mapStateToProps = state => ({\n    tutors: state.tutors,\n});\n\nclass TutorListItem extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            locations: [],\n            subjects: []\n        }\n    }\n\n    componentDidMount = () => {\n        this.getTutorLocations();\n        this.getTutorSubjects();\n    }\n\n    getTutorLocations = () => {\n        Axios({\n            method: 'GET',\n            url: `/tutors/locations/${this.props.tutor.id}`\n        }).then((response) => {\n            console.log('getTutorLocations: ', response.data);\n            this.setState({\n                locations: response.data,\n            });\n        }).catch((error) => {\n            console.log('get locations error: ', error);\n        })\n    }\n\n    getTutorSubjects = () => {\n        Axios({\n            method: 'GET',\n            url: `/tutors/subjects/${this.props.tutor.id}`\n        }).then((response) => {\n            console.log('getTutorSubjects: ', response.data);\n            this.setState({\n                subjects: response.data,\n            });\n        }).catch((error) => {\n            console.log('get subjects error: ', error);\n        })\n    }\n\n    toggleAdminStatus = () => {\n        let action = {\n            type: 'TOGGLE_ADMIN',\n            payload: {\n                permissions: this.props.tutor.permissions,\n                id: this.props.tutor.user_id\n            }\n        }\n        this.props.dispatch(action);\n    }\n\n    render() {\n        let button = null;\n        let admin = null;\n        let transfer = <TransferIcon />\n        let promote = <AdminIcon />\n        let person = <PersonIcon />\n\n        if (this.props.tutor.permissions === 1) {\n            button = (\n                <Button style={{ marginRight: '25px' }} color=\"default\" variant=\"contained\" onClick={this.toggleAdminStatus}>{promote}Make Admin</Button>\n            )\n        } else {\n            button = (\n                <Button style={{ marginRight: '25px' }} color=\"primary\" variant=\"contained\" onClick={this.toggleAdminStatus}>{transfer}Remove as Admin</Button>\n            )\n\n            admin = (\n                <div style={{ color: '#B66D67'}}>\n                    <AdminIcon />\n                    <p style={{ float: 'right', fontSize: '12px' }}>Admin</p>\n                </div>\n\n            )\n\n        }\n        return (\n            <ExpansionPanel>\n                <ExpansionPanelSummary style={{backgroundColor: '#F1F6FF'}} expandIcon={<ExpandMoreIcon />}>\n                    <Typography>\n                        {person}<b style={{ fontSize: \"24px\", color: \"#5D6874\" }}>{this.props.tutor.user_first_name} {this.props.tutor.user_last_name}</b>\n                        <div style={{ float: \"right\", marginLeft: \"10px\" }}>{admin}</div>\n                    </Typography>\n                </ExpansionPanelSummary>\n                <ExpansionPanelDetails>\n                    <Typography>\n                        <h5>Contact:</h5>\n                        {this.props.tutor.user_address} <br />\n                        {this.props.tutor.user_city}, {this.props.tutor.user_state} {this.props.tutor.user_zipcode}\n                        <br />{this.props.tutor.user_cell_phone}\n                        <br />{this.props.tutor.user_email} <br />\n                        <br /> <h5>Application Information:</h5>\n                        <b>Qualifications:</b> {this.props.tutor.user_qualifications}\n                        <br /><b>Experience:</b> {this.props.tutor.user_experience}\n                        <br /><b>Age group:</b> {this.props.tutor.user_age_group}<br />\n                        <br /><b>Subject(s):</b>\n                        <ul style={{ listStyleType: 'none' }}>\n                            {this.state.subjects.map((subject) => {\n                                return (\n                                    <li key={subject.join_id}>{subject.subjects}</li>\n                                )\n                            })}\n                        </ul>\n                        <b>Preferred Location(s):</b>\n                        <ul style={{ listStyleType: 'none' }}>\n                            {this.state.locations.map((location) => {\n                                return (\n                                    <li key={location.join_id}>{location.location_name}</li>\n                                )\n                            })}\n                        </ul>\n                        <b>Password:</b>&nbsp;{this.props.tutor.password}\n                        {/* {JSON.stringify(this.state.locations)} */}\n                        <div style={{ display: 'flex', justifyContent: 'flex-end', width: '95vw', }}>\n                            <EditTutorDialog\n                                tutor={this.props.tutor}\n                                selectedSubjects={this.state.subjects}\n                                selectedLocations={this.state.locations}\n                                getTutorLocations={this.getTutorLocations}\n                                getTutorSubjects={this.getTutorSubjects}\n                            />\n                            <RemoveTutorDialog tutor={this.props.tutor} />\n                            {button}\n                        </div>\n                    </Typography>\n                </ExpansionPanelDetails>\n            </ExpansionPanel>\n        )\n    }\n}\n\nexport default connect(mapStateToProps)(TutorListItem);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n// component imports\nimport TutorListItem from './TutorListItem';\n\nconst mapStateToProps = state => ({\n    tutors: state.tutors,\n});\n\nclass TutorsList extends Component {\n    componentDidMount = () => {\n        this.getTutors();\n    }\n\n    getTutors = () => {\n        this.props.dispatch({type: 'GET_TUTORS'});\n    }\n\n    render() {\n        return (\n            <div>\n                {this.props.tutors.map((tutor) => {\n                    return(\n                        <TutorListItem key={tutor.id} tutor={tutor} />\n                    )\n                })}\n            </div>\n        )\n    }\n}\n\nexport default connect(mapStateToProps)(TutorsList);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\nimport './ManageTutorsPage.css';\n// action imports\nimport { USER_ACTIONS } from '../../redux/actions/userActions';\n// component imports\nimport AdminNav from '../AdminNav/AdminNav';\nimport TutorsList from './TutorsList';\nimport AlertDialog from '../AlertDialog/AlertDialog';\n// Material UI imports\nimport { Button } from '@material-ui/core';\n\nconst style = {\n    marginLeft: '85%',\n    marginBottom: '10px',\n}\n\nconst mapStateToProps = state => ({\n    user: state.user,\n});\n\nclass ManageTutorsPage extends Component {\n    componentDidMount() {\n        this.props.dispatch({ type: USER_ACTIONS.FETCH_USER });\n    }\n\n    // componentDidUpdate runs after props and state have changed.\n    //If we arent loading the user call AND we dont have a user, kick us out to home\n    componentDidUpdate() {\n        if (!this.props.user.isLoading && this.props.user.userName === null) {\n            this.props.history.push('/login');\n        } else if (!this.props.user.isLoading && this.props.user.permissions === 1) {\n            this.props.history.push('/select-location');\n        }\n    }\n\n    newTutor = () => {\n        this.props.history.push('/add-tutor');\n    }\n\n    render() {\n        let content = null;\n        let nav = null;\n\n        if (this.props.user.permissions === 2) {\n            nav = (\n                <AdminNav history={this.props.history} />\n            )\n        }\n\n        if (this.props.user.userName) {\n            content = (\n                <div className=\"tutors-view-container\">\n                    <h1>Manage Tutors</h1>\n                    <Button style={style} variant=\"contained\" color=\"primary\" onClick={this.newTutor}>+ Add New Tutor</Button>\n                    <TutorsList />\n                </div>\n            )\n        }\n        return (\n            <div>\n                {nav}\n                {content}\n                <AlertDialog />\n            </div>\n        )\n    }\n}\n\nexport default connect(mapStateToProps)(ManageTutorsPage);","import React, { Component } from 'react';\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\n\nclass AddTutorConfirmation extends Component {\n    render() {\n        return (\n            <Dialog\n                open={this.props.open}\n            >\n                <DialogContent>\n                    <DialogContentText id=\"alert-dialog-description\">\n                        Tutor has been sucessfully added!\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button variant=\"contained\" color=\"primary\" onClick={this.props.handleClose} color=\"primary\" autoFocus>\n                        Ok\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        )\n    }\n}\n\nexport default AddTutorConfirmation;","import React, { Component } from 'react';\nimport StateSelect from '../NewApplicationPage/StateSelect';\nimport { connect } from 'react-redux';\nimport './AddTutorPage.css';\nimport AdminNav from '../AdminNav/AdminNav';\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport axios from 'axios';\nimport AddTutorConfirmation from './AddTutorConfirmation';\nimport Grid from '@material-ui/core/Grid';\nimport FormControl from '@material-ui/core/FormControl';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormHelperText from '@material-ui/core/FormHelperText';\n\n// action imports\nimport { USER_ACTIONS } from '../../redux/actions/userActions';\n\nconst mapStateToProps = state => ({\n    user: state.user,\n    newTutorToAdd: state.newTutorToAdd,\n    subjects: state.subjects,\n    locations: state.locations.locations,\n});\n\nclass AddTutorPage extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            applicant_subjects: [],\n            applicant_locations: [],\n            confirmationOpen: false,\n        }\n    }\n\n    componentDidMount() {\n        this.getSubjects();\n        this.getLocations();\n        this.props.dispatch({ type: USER_ACTIONS.FETCH_USER });\n    }\n\n    // componentDidUpdate runs after props and state have changed.\n    //If we arent loading the user call AND we dont have a user, kick us out to home\n    componentDidUpdate() {\n        if (!this.props.user.isLoading && this.props.user.userName === null) {\n            this.props.history.push('/login');\n        }\n    }\n\n    // get list of subjects from subjectsSaga\n    getSubjects = () => {\n        this.props.dispatch({\n            type: 'GET_SUBJECTS'\n        });\n    }\n\n    // get list of current tutoring locations from locationsSaga\n    getLocations = () => {\n        this.props.dispatch({\n            type: 'GET_LOCATIONS'\n        });\n    }\n\n    // handles the change of application input values\n    handleApplicationChange = (event) => {\n        let action = {\n            type: 'EDIT_TUTOR',\n            payload: {\n                name: event.target.name,\n                value: event.target.value\n            }\n        }\n        this.props.dispatch(action);\n    }\n\n    // handles selecting the state\n    handleApplicantStateChange = (value) => {\n        let action = {\n            type: 'EDIT_TUTOR',\n            payload: {\n                name: 'user_state',\n                value: value\n            }\n        }\n        this.props.dispatch(action);\n    }\n\n    // update array of checked subjects in redux\n    handleSubjectCheckbox = (event, isChecked) => {\n        if (isChecked) {\n            this.props.dispatch({\n                type: 'CHECK_SUBJECT',\n                payload: event.target.value\n            })\n        } else if (isChecked === false) {\n            this.props.dispatch({\n                type: 'UNCHECK_SUBJECT',\n                payload: event.target.value\n            })\n        }\n    }\n\n    // update array of checked locations in redux\n    handleLocationsCheckbox = (event, isChecked) => {\n        if (isChecked) {\n            this.props.dispatch({\n                type: 'CHECK_LOCATION',\n                payload: event.target.value\n            })\n        } else if (isChecked === false) {\n            this.props.dispatch({\n                type: 'UNCHECK_LOCATION',\n                payload: event.target.value\n            })\n        }\n    }\n\n    // post new tutor form to the server\n    handleNewTutorForm = (event) => {\n        event.preventDefault();\n        const tutor = {\n            newTutor: this.props.newTutorToAdd,\n            subjects: this.state.applicant_subjects,\n            locations: this.state.applicant_locations,\n        }\n        console.log(tutor)\n        axios({\n            method: 'POST',\n            url: '/tutors',\n            data: tutor\n        }).then((response) => {\n            // setState to open dialogue\n            console.log(response.data);\n            this.setState({\n                confirmationOpen: true,\n            })\n        }).catch((error) => {\n            console.log('Error in handleNewTutorForm POST route: ', error);\n        });\n    }\n\n    handleConfirmationClose = () => {\n        this.setState({\n            confirmationOpen: false,\n        })\n        this.props.history.push('/manage-tutors');\n    }\n\n    render() {\n        let content = null;\n\n        if (this.props.user.userName) {\n            content = (\n                <div className=\"add-tutor-container\">\n                    <form onSubmit={this.handleNewTutorForm}>\n                        <Grid container spacing={16}>\n                            <Grid item xs={4}>\n                                <h1>Add New Tutor</h1>\n                                <TextField\n                                    required\n                                    name=\"applicant_first_name\"\n                                    label=\"First Name\"\n                                    margin=\"normal\"\n                                    value={this.props.newTutorToAdd.newTutorToAdd.applicant_first_name}\n                                    onChange={this.handleApplicationChange}\n                                    fullWidth\n                                />\n                                <TextField\n                                    required\n                                    name=\"applicant_last_name\"\n                                    label=\"Last Name\"\n                                    margin=\"normal\"\n                                    value={this.props.newTutorToAdd.newTutorToAdd.applicant_last_name}\n                                    onChange={this.handleApplicationChange}\n                                    fullWidth\n                                />\n                                <br />\n                                <TextField\n                                    required\n                                    name=\"applicant_address\"\n                                    label=\"Address\"\n                                    margin=\"normal\"\n                                    value={this.props.newTutorToAdd.newTutorToAdd.applicant_address}\n                                    onChange={this.handleApplicationChange}\n                                    fullWidth\n                                />\n                                <TextField\n                                    required\n                                    name=\"applicant_city\"\n                                    label=\"City\"\n                                    margin=\"normal\"\n                                    value={this.props.newTutorToAdd.newTutorToAdd.applicant_city}\n                                    onChange={this.handleApplicationChange}\n                                    fullWidth\n                                />\n                                <br />\n                                <br />\n                                <StateSelect\n                                    handleApplicantStateChange={this.handleApplicantStateChange}\n                                    defaultState={this.props.newTutorToAdd.newTutorToAdd.applicant_state}\n                                />\n                                <TextField\n                                    required\n                                    name=\"applicant_zipcode\"\n                                    label=\"Zipcode\"\n                                    margin=\"normal\"\n                                    value={this.props.newTutorToAdd.newTutorToAdd.applicant_zipcode}\n                                    onChange={this.handleApplicationChange}\n                                    fullWidth\n                                />\n                                <br />\n                                <TextField\n                                    required\n                                    name=\"applicant_cell_phone\"\n                                    label=\"Cell Phone\"\n                                    margin=\"normal\"\n                                    value={this.props.newTutorToAdd.newTutorToAdd.applicant_cell_phone}\n                                    onChange={this.handleApplicationChange}\n                                    fullWidth\n                                />\n                                <TextField\n                                    required\n                                    name=\"applicant_email\"\n                                    label=\"Email\"\n                                    margin=\"normal\"\n                                    value={this.props.newTutorToAdd.newTutorToAdd.applicant_email}\n                                    onChange={this.handleApplicationChange}\n                                    fullWidth\n                                />\n                            </Grid>\n                            <Grid item xs={4}>\n                                <h3>Requested Locations</h3>\n                                <FormGroup>\n                                    {this.props.locations.map((location, index) => {\n                                        let content = null;\n                                        if (this.props.newTutorToAdd.newTutorLocations.includes(String(location.id))) {\n                                            content = (\n                                                <FormControlLabel\n                                                    key={location.id}\n                                                    control={\n                                                        <Checkbox\n                                                            checked=\"true\"\n                                                            name=\"applicant_locations\"\n                                                            key={location.id}\n                                                            label={location.location_name}\n                                                            value={`${location.id}`}\n                                                            onChange={this.handleLocationsCheckbox}\n                                                            color=\"primary\"\n                                                        />}\n                                                    label={location.location_name}>\n                                                </FormControlLabel>\n                                            )\n                                        } else {\n                                            content = (\n                                                <FormControlLabel\n                                                    key={location.id}\n                                                    control={\n                                                        <Checkbox\n                                                            name=\"applicant_locations\"\n                                                            key={location.id}\n                                                            label={location.location_name}\n                                                            value={`${location.id}`}\n                                                            onChange={this.handleLocationsCheckbox}\n                                                            color=\"primary\"\n                                                        />}\n                                                    label={location.location_name}>\n                                                </FormControlLabel>\n                                            )\n                                        }\n                                        return (\n                                            <React.Fragment>\n                                                {content}\n                                            </React.Fragment>\n                                        )\n                                    })}\n                                </FormGroup>\n                                <TextField\n                                    required\n                                    name=\"applicant_qualifications\"\n                                    label=\"Qualifications\"\n                                    margin=\"normal\"\n                                    value={this.props.newTutorToAdd.newTutorToAdd.applicant_qualifications}\n                                    onChange={this.handleApplicationChange}\n                                    fullWidth\n                                    multiline\n                                    rows={3}\n                                />\n                                <TextField\n                                    required\n                                    name=\"applicant_experience\"\n                                    label=\"Previous Experience\"\n                                    margin=\"normal\"\n                                    value={this.props.newTutorToAdd.newTutorToAdd.applicant_experience}\n                                    onChange={this.handleApplicationChange}\n                                    fullWidth\n                                    multiline\n                                    rows={3}\n                                />\n                                <TextField\n                                    required\n                                    name=\"applicant_age_group\"\n                                    label=\"Preferred Age Group\"\n                                    margin=\"normal\"\n                                    value={this.props.newTutorToAdd.newTutorToAdd.applicant_age_group}\n                                    onChange={this.handleApplicationChange}\n                                    fullWidth\n                                />\n                            </Grid>\n                            <Grid item xs={4}>\n                                <h3>Subject Area(s) of Interest</h3>\n                                <FormGroup>\n                                    {this.props.subjects.map((subject, index) => {\n                                        let content = null;\n                                        if (this.props.newTutorToAdd.newTutorSubjects.includes(String(subject.id))) {\n                                            content = (\n                                                <FormControlLabel\n                                                    key={subject.id}\n                                                    control={\n                                                        <Checkbox\n                                                            checked=\"true\"\n                                                            name=\"applicant_subjects\"\n                                                            key={subject.id}\n                                                            label={subject.subjects}\n                                                            value={`${subject.id}`}\n                                                            onChange={this.handleSubjectCheckbox}\n                                                            color=\"primary\"\n                                                        />}\n                                                    label={subject.subjects}>\n                                                </FormControlLabel>\n                                            )\n                                        } else {\n                                            content = (\n                                                <FormControlLabel\n                                                    key={subject.id}\n                                                    control={\n                                                        <Checkbox\n                                                            name=\"applicant_subjects\"\n                                                            key={subject.id}\n                                                            label={subject.subjects}\n                                                            value={`${subject.id}`}\n                                                            onChange={this.handleSubjectCheckbox}\n                                                            color=\"primary\"\n                                                        />}\n                                                    label={subject.subjects}>\n                                                </FormControlLabel>\n                                            )\n                                        }\n                                        return (\n                                            <React.Fragment>\n                                                {content}\n                                            </React.Fragment>\n                                        )\n                                    })}\n                                </FormGroup>\n                                <FormControl>\n                                <TextField\n                                    required\n                                    name=\"password\"\n                                    type=\"password\"\n                                    label=\"Password\"\n                                    margin=\"normal\"\n                                    value={this.props.newTutorToAdd.newTutorToAdd.password}\n                                    onChange={this.handleApplicationChange}\n                                    fullWidth\n                                />\n                                <FormHelperText style={{color: 'red'}}><p>Enter a password to register this tutor.<br />Username will be the tutor's email address.</p></FormHelperText>\n                                </FormControl>\n                                <div style={{ display: 'flex', alignItems: 'flex-end', justifyContent: 'flex-end', alignContent: 'flex-end', height: '50px' }}>\n                                <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n                                    Submit\n                                </Button>\n                                </div>\n                            </Grid>\n                        </Grid>\n                    </form>\n                </div>\n            )\n        }\n        return (\n            <div>\n                <AdminNav history={this.props.history} />\n                {content}\n                <AddTutorConfirmation \n                    open={this.state.confirmationOpen}\n                    handleClose={this.handleConfirmationClose}\n                />\n            </div>\n        )\n    }\n}\n\nexport default connect(mapStateToProps)(AddTutorPage);","import React, { Component } from 'react';\nimport { connect } from 'react-redux';\n// Material UI imports\nimport Button from '@material-ui/core/Button';\n// action imports\nimport { triggerLogout } from '../../redux/actions/loginActions';\n// material bootstrap imports\nimport { Navbar, NavbarBrand, NavbarNav, NavbarToggler, Collapse, NavItem } from 'mdbreact';\n\nclass NewApplicationHeader extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            collapse: false,\n            isWideEnough: false,\n        };\n        this.onClick = this.onClick.bind(this);\n    }\n\n    onClick() {\n        this.setState({\n            collapse: !this.state.collapse,\n        });\n    }\n\n    logout = () => {\n        this.props.dispatch(triggerLogout());\n    }\n\n    render() {\n        return (\n            <Navbar className=\"tutor-nav\" light expand=\"md\">\n                <NavbarBrand tag=\"span\">\n                    <img className=\"tutor-nav-brand\" src=\"./images/catalyst2.png\" />\n                </NavbarBrand>\n                {!this.state.isWideEnough && <NavbarToggler onClick={this.onClick} />}\n                <Collapse isOpen={this.state.collapse} navbar>\n                    <NavbarNav>\n                        <NavItem>\n                            <h1>New Tutor Application</h1>\n                        </NavItem>\n                    </NavbarNav>\n                    <NavbarNav right>\n                        <NavItem>\n                            <Button href=\"/#\">Back</Button>\n                        </NavItem>\n                    </NavbarNav>\n                </Collapse>\n            </Navbar>\n        )\n    }\n}\n\nexport default connect()(NewApplicationHeader);","import React, { Component } from 'react'\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nclass SubmitDialog extends Component {\n\n    handleClose = () => {\n        this.props.handleDialogClose();\n    }\n\n    render() {\n        return (\n            <Dialog\n                open={this.props.open}\n                aria-labelledby=\"alert-dialog-title\"\n                aria-describedby=\"alert-dialog-description\"\n            >\n                <DialogTitle id=\"alert-dialog-title\">{\"Thank you for submitting an application!\"}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText id=\"alert-dialog-description\">\n                        A Catalyst Learning Center Administrator will be in contact with you shortly.\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleClose} color=\"primary\" variant=\"contained\" autoFocus>\n                        Ok\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        )\n    }\n}\n\nexport default SubmitDialog;","import React, { Component } from 'react'\nimport Button from '@material-ui/core/Button';\nimport Dialog from '@material-ui/core/Dialog';\nimport DialogActions from '@material-ui/core/DialogActions';\nimport DialogContent from '@material-ui/core/DialogContent';\nimport DialogContentText from '@material-ui/core/DialogContentText';\nimport DialogTitle from '@material-ui/core/DialogTitle';\n\nclass SubmitFailedDialog extends Component {\n\n    handleClose = () => {\n        this.props.handleDialogClose();\n    }\n\n    render() {\n        return (\n            <Dialog\n                open={this.props.open}\n                aria-labelledby=\"alert-dialog-title\"\n                aria-describedby=\"alert-dialog-description\"\n            >\n                <DialogTitle id=\"alert-dialog-title\">{\"Application Submit Failed\"}</DialogTitle>\n                <DialogContent>\n                    <DialogContentText id=\"alert-dialog-description\">\n                        Please make sure that you have filled out all the fields or try again later\n                    </DialogContentText>\n                </DialogContent>\n                <DialogActions>\n                    <Button onClick={this.handleClose} variant=\"contained\" color=\"primary\" autoFocus>\n                        Ok\n                    </Button>\n                </DialogActions>\n            </Dialog>\n        )\n    }\n}\n\nexport default SubmitFailedDialog;","import React, { Component } from 'react';\nimport axios from 'axios';\nimport { connect } from 'react-redux';\n// css\nimport './NewApplicationPage.css';\n// components\nimport NewApplicationHeader from './NewApplicationHeader';\nimport StateSelect from './StateSelect';\nimport SubmitDialog from './SubmitDialog';\nimport SubmitFailedDialog from './SubmitFailedDialog';\n// recaptcha \nimport ReCaptcha from '../../ReCaptcha/ReCaptcha';\n// Material UI\nimport TextField from '@material-ui/core/TextField';\nimport Button from '@material-ui/core/Button';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport Grid from '@material-ui/core/Grid';\nimport PictureAsPdf from '@material-ui/icons/PictureAsPdf';\n\nconst mapStateToProps = state => ({\n    locations: state.locations.locations, // to get locations for checkbox mapping\n    subjects: state.subjects // to get subjects for checkbox mapping\n});\n\n\nclass NewApplicationPage extends Component {\n    constructor(props) {\n        super(props);\n        // functions for recaptcha\n        this.onLoadRecaptcha = this.onLoadRecaptcha.bind(this);\n        this.verifyCallback = this.verifyCallback.bind(this);\n        this.state = {\n            //application to send to database\n            application: {\n                applicant_first_name: '',\n                applicant_last_name: '',\n                applicant_address: '',\n                applicant_city: '',\n                applicant_state: 'MN',\n                applicant_zipcode: '',\n                applicant_cell_phone: '',\n                applicant_email: '',\n                applicant_qualifications: '',\n                applicant_experience: '',\n                applicant_age_group: '',\n                resume: '',\n            },\n            applicant_subjects: [],\n            applicant_locations: [],\n            recaptchaToken: '',\n            // handle alert dialogs\n            submitDialogOpen: false,\n            submitFailedDialogOpen: false\n        }\n    }\n\n    componentDidMount = () => {\n        this.getSubjects(); // get subjects for checkbox mapping\n        this.getLocations(); // get locations for checkbox mapping\n        if (this.captcha) {\n            console.log(\"started, just a second...\")\n            this.captcha.reset();\n        }\n\n        this.config = { // configure recaptcha\n            cloud_name: \"catalyst-learning-center\",\n            api_key: process.env.RECAPTCHA_API_KEY,\n            api_secret: process.env.RECAPTCHA_API_SECRET,\n            upload_preset: \"c7bvn7bu\"\n        }\n    }\n\n    onLoadRecaptcha() {\n        if (this.captcha) {\n            this.captcha.reset();\n        }\n    }\n\n    verifyCallback(recaptchaToken) {\n        // Here you will get the final recaptchaToken \n        this.setState({\n            recaptchaToken: recaptchaToken\n        });\n    }\n\n    // cloudinary image upload request\n    openCloudinary = (event) => {\n        event.preventDefault();\n        window.cloudinary.openUploadWidget(this.config, (error, result) => {\n            if (result) {\n                let cloudinaryUrl = result[0].url\n                this.setState({\n                    application: { ...this.state.application, resume: cloudinaryUrl }\n                });\n            }\n        })\n    }\n\n    // function for the presentation of the app.  Click on the \"Subject areas of interest\" will auto fill most of the form\n    easyFunction = () => {\n        this.setState({\n            application: {\n                applicant_first_name: 'Anthony',\n                applicant_last_name: 'James',\n                applicant_address: '1234 Main St',\n                applicant_city: 'Minneapolis',\n                applicant_state: 'MN',\n                applicant_zipcode: '55415',\n                applicant_cell_phone: '612-555-5555',\n                applicant_email: 'Anthony.James@gmail.com',\n                applicant_qualifications: 'Licensed Math Teacher',\n                applicant_experience: '4 years teaching at Seward Montessori',\n                applicant_age_group: 'K-12',\n            },\n        })\n    }\n\n    //send application to server\n    postApplication = (e) => {\n        e.preventDefault();\n        axios({\n            method: 'POST',\n            url: '/applications',\n            data: { captcha: this.state.recaptchaToken, application: this.state.application, applicant_subjects: this.state.applicant_subjects, applicant_locations: this.state.applicant_locations }\n        }).then((response) => {\n            console.log(response.data);\n            this.handleSubmitDialogOpen(); // if successful, open success dialog\n        }).catch((error) => {\n            console.log('Error in Application POST', error);\n            this.setState({\n                submitFailedDialogOpen: true // if unsuccessful, open failed dialog\n            });\n        })\n    }\n\n    // get list of subjects from database\n    getSubjects = () => {\n        this.props.dispatch({ type: 'GET_SUBJECTS' })\n    }\n\n    // get list of locations\n    getLocations = () => {\n        this.props.dispatch({ type: 'GET_LOCATIONS' })\n    }\n\n    // open submit dialog\n    handleSubmitDialogOpen = () => {\n        this.setState({\n            submitDialogOpen: true\n        })\n    }\n\n    // close submit dialog and push to login\n    handleSubmitDialogClose = () => {\n        this.setState({\n            submitDialogOpen: false\n        })\n        this.props.history.push('/login')\n    }\n\n    // close submit failed dialog\n    submitFailedDialogClose = () => {\n        this.setState({\n            submitFailedDialogOpen: false\n        })\n    }\n\n    // update application to send\n    handleApplicantStateChange = (value) => {\n        this.setState({\n            application: { ...this.state.application, applicant_state: value }\n        });\n    }\n\n    // change application values\n    handleApplicationChange = (e) => {\n        this.setState({\n            application: { ...this.state.application, [e.target.name]: e.target.value }\n        })\n    }\n\n    //update applicant_subjects in local state\n    handleSubjectCheckbox = (event, isChecked) => {\n        if (isChecked) {\n            this.setState({\n                applicant_subjects: [...this.state.applicant_subjects, event.target.value]\n            });\n        } else if (isChecked === false) {\n            this.setState({\n                applicant_subjects: this.state.applicant_subjects.filter((id) => id !== event.target.value)\n            });\n        }\n    }\n\n    //update applicant_locations in local state\n    handleLocationsCheckbox = (event, isChecked) => {\n        if (isChecked) {\n            this.setState({\n                applicant_locations: [...this.state.applicant_locations, event.target.value]\n            });\n        } else if (isChecked === false) {\n            this.setState({\n                applicant_locations: this.state.applicant_locations.filter((id) => id !== event.target.value)\n            });\n        }\n    }\n\n\n    render() {\n        let resumePdf = null\n        // If cloudinary upload was successful, display a message\n        if (this.state.application.resume) {\n            resumePdf = <p>Resume Upload Successful <PictureAsPdf /></p>\n        } else {\n            resumePdf = <br />\n        }\n\n        return (\n            <div className=\"view-container\">\n                <NewApplicationHeader history={this.props.history} />\n                <div className=\"application-container\">\n                    <form onSubmit={this.postApplication}>\n                        <Grid container spacing={16}>\n                            <Grid item xs={4}>\n                                <h3>Contact Information</h3>\n                                <TextField\n                                    required\n                                    name=\"applicant_first_name\"\n                                    label=\"First Name\"\n                                    margin=\"normal\"\n                                    value={this.state.application.applicant_first_name}\n                                    onChange={this.handleApplicationChange}\n                                    fullWidth\n                                />\n                                <br />\n                                <TextField\n                                    required\n                                    name=\"applicant_last_name\"\n                                    label=\"Last Name\"\n                                    margin=\"normal\"\n                                    value={this.state.application.applicant_last_name}\n                                    onChange={this.handleApplicationChange}\n                                    fullWidth\n                                />\n                                <br />\n                                <TextField\n                                    required\n                                    name=\"applicant_address\"\n                                    label=\"Address\"\n                                    margin=\"normal\"\n                                    value={this.state.application.applicant_address}\n                                    onChange={this.handleApplicationChange}\n                                    fullWidth\n                                />\n                                <br />\n                                <TextField\n                                    required\n                                    name=\"applicant_city\"\n                                    label=\"City\"\n                                    margin=\"normal\"\n                                    value={this.state.application.applicant_city}\n                                    onChange={this.handleApplicationChange}\n                                    fullWidth\n                                />\n                                <br />\n                                <br />\n                                <StateSelect\n                                    handleApplicantStateChange={this.handleApplicantStateChange} defaultState={this.state.application.applicant_state}\n                                />\n                                <TextField\n                                    required\n                                    name=\"applicant_zipcode\"\n                                    label=\"Zip Code\"\n                                    margin=\"normal\"\n                                    value={this.state.application.applicant_zipcode}\n                                    onChange={this.handleApplicationChange}\n                                    fullWidth\n                                />\n                                <br />\n                                <TextField\n                                    required\n                                    name=\"applicant_cell_phone\"\n                                    label=\"Cell Phone\"\n                                    margin=\"normal\"\n                                    value={this.state.application.applicant_cell_phone}\n                                    onChange={this.handleApplicationChange}\n                                    fullWidth\n                                />\n                                <br />\n                                <TextField\n                                    required\n                                    name=\"applicant_email\"\n                                    label=\"Email Address\"\n                                    margin=\"normal\"\n                                    value={this.state.application.applicant_email}\n                                    onChange={this.handleApplicationChange}\n                                    fullWidth\n                                />\n                                <br />\n                            </Grid>\n                            <Grid item xs={4}>\n                                <h3 onClick={this.easyFunction}>Subject Areas of Interest</h3>\n                                <FormGroup>\n                                    {this.props.subjects.map((subject, index) => (\n                                        <FormControlLabel\n                                            key={subject.id}\n                                            control={<Checkbox\n                                                name=\"applicant_subjects\"\n                                                key={subject.id}\n                                                label={subject.subjects}\n                                                value={`${subject.id}`}\n                                                onChange={this.handleSubjectCheckbox}\n                                                color=\"primary\"\n                                            />}\n                                            label={subject.subjects}>\n                                        </FormControlLabel>\n                                    ))}\n                                </FormGroup>\n                                <br />\n                            </Grid>\n                            <Grid item xs={4}>\n                                <div style={{ display: 'flex', flexDirection: 'column', justifyContent: 'flex-start' }}>\n                                    <h3>Requested Locations</h3>\n                                    <FormGroup>\n                                        {this.props.locations.map((location) => (\n                                            <FormControlLabel\n                                                key={location.id}\n                                                control={<Checkbox\n                                                    name=\"applicant_subjects\"\n                                                    key={location.id}\n                                                    value={`${location.id}`}\n                                                    onChange={this.handleLocationsCheckbox}\n                                                    color=\"primary\"\n                                                />}\n                                                label={location.location_name}>\n                                            </FormControlLabel>\n                                        ))}\n                                    </FormGroup>\n                                    <TextField\n                                        required\n                                        name=\"applicant_qualifications\"\n                                        label=\"Applicable Qualifications\"\n                                        margin=\"normal\"\n                                        value={this.state.application.applicant_qualifications}\n                                        onChange={this.handleApplicationChange}\n                                        fullWidth\n                                        multiline\n                                        rows={3}\n                                    />\n                                    <TextField\n                                        required\n                                        name=\"applicant_experience\"\n                                        label=\"Past Tutoring Experience\"\n                                        margin=\"normal\"\n                                        value={this.state.application.applicant_experience}\n                                        onChange={this.handleApplicationChange}\n                                        fullWidth\n                                        multiline\n                                        rows={3}\n                                    />\n                                    <TextField\n                                        required\n                                        name=\"applicant_age_group\"\n                                        label=\"Which age group do you prefer to teach?\"\n                                        margin=\"normal\"\n                                        value={this.state.application.applicant_age_group}\n                                        onChange={this.handleApplicationChange}\n                                        fullWidth\n                                    />\n                                    {resumePdf}\n                                    <Button variant=\"contained\" onClick={this.openCloudinary}>Upload Resume (PDF)</Button>\n                                </div>\n                                <div style={{ display: 'flex', alignItems: 'flex-end', justifyContent: 'space-around', alignContent: 'center', height: '100px' }}>\n                                    <ReCaptcha\n                                        ref={(el) => { this.captcha = el; }}\n                                        size=\"normal\"\n                                        render=\"explicit\"\n                                        sitekey=\"6Ld9BHQUAAAAANG2ZTJ-tsZGsw9uaE1_1PTUKXlM\"\n                                        onloadCallback={this.onLoadRecaptcha}\n                                        verifyCallback={this.verifyCallback}\n                                    />\n                                    <Button variant=\"contained\" color=\"primary\" type=\"submit\">\n                                        Submit\n                                    </Button>\n                                </div>\n                            </Grid>\n                        </Grid>\n                    </form>\n                <SubmitDialog open={this.state.submitDialogOpen} handleDialogClose={this.handleSubmitDialogClose} />\n                <SubmitFailedDialog open={this.state.submitFailedDialogOpen} handleDialogClose={this.submitFailedDialogClose} />\n            </div>\n            </div >\n                )\n    }\n}\n\nexport default connect(mapStateToProps)(NewApplicationPage);","const loadReCaptcha = () => {\n    console.log('loadReCaptcha!!!!!!');\n    const script = document.createElement(\"script\");\n    // script.async = true;\n    // script.defer = true;\n    script.src = \"https://www.google.com/recaptcha/api.js\";\n    document.body.appendChild(script);\n};\n\nexport default loadReCaptcha;\n","import React, { Component } from 'react';\nimport {\n  HashRouter as Router,\n  Route,\n  Redirect,\n  Switch,\n} from 'react-router-dom';\n// component imports\nimport LoginPage from './components/LoginPage/LoginPage';\nimport RegisterPage from './components/RegisterPage/RegisterPage';\nimport SelectLocationPage from './components/SelectLocationPage/SelectLocationPage';\nimport SessionsPage from './components/SessionsPage/SessionsPage';\nimport AdminDataPage from './components/AdminDataPage/AdminDataPage';\nimport ManageApplicationsPage from './components/ManageApplicationsPage/ManageApplicationsPage';\nimport ManageLocationsPage from './components/ManageLocationsPage/ManageLocationsPage';\nimport ManageTutorsPage from './components/ManageTutorsPage/ManageTutorsPage';\nimport AddTutorPage from './components/AddTutorPage/AddTutorPage';\nimport NewApplicationPage from './components/NewApplicationPage/NewApplicationPage';\n\nimport loadReCaptcha from './ReCaptcha/loadReCaptcha';\n\nimport './styles/main.css';\nimport { MuiThemeProvider, createMuiTheme } from '@material-ui/core/styles';\n\nconst theme = createMuiTheme({\n  typography: {\n    useNextVariants: true,\n  },\n  palette: {\n    primary: {\n      main:'#ad0400'\n    },\n  }\n});\n\nclass App extends Component {\n  constructor(props){\n    super(props);\n    loadReCaptcha();\n\n  }\n  componentDidMount() {\n  }\n\n  render() {\n    return (\n      <div>\n        <MuiThemeProvider theme={theme}>\n          <Router>\n            <Switch>\n              <Redirect exact from=\"/\" to=\"/login\" />\n              <Route\n                path=\"/login\"\n                component={LoginPage}\n              />\n              <Route\n                path=\"/register\"\n                component={RegisterPage}\n              />\n              <Route\n                path=\"/select-location\"\n                component={SelectLocationPage}\n              />\n              <Route\n                path=\"/sessions\"\n                component={SessionsPage}\n              />\n              <Route\n                path=\"/admin-data\"\n                component={AdminDataPage}\n              />\n              <Route\n                path=\"/manage-applications\"\n                component={ManageApplicationsPage}\n              />\n              <Route\n                path=\"/manage-locations\"\n                component={ManageLocationsPage}\n              />\n              <Route\n                path=\"/manage-tutors\"\n                component={ManageTutorsPage}\n              />\n              <Route\n                path=\"/add-tutor\"\n                component={AddTutorPage}\n              />\n              <Route\n                path=\"/new-application\"\n                component={NewApplicationPage}\n              />\n              {/* OTHERWISE (no path!) */}\n              <Route render={() => <h1>404</h1>} />\n            </Switch>\n          </Router>\n        </MuiThemeProvider>\n      </div>\n    )\n  }\n}\n\n\nexport default App;\n","import { put, takeLatest } from 'redux-saga/effects';\nimport { USER_ACTIONS } from '../actions/userActions';\nimport { callUser } from '../requests/userRequests';\n\n// worker Saga: will be fired on \"FETCH_USER\" actions\nfunction* fetchUser() {\n  try {\n    // sets that the async request is in progress\n    yield put({ type: USER_ACTIONS.REQUEST_START });\n    const user = yield callUser();\n    yield put({\n      type: USER_ACTIONS.SET_USER,\n      user,\n    });\n    // sets that the async request is finished\n    yield put({\n      type: USER_ACTIONS.REQUEST_DONE,\n    });\n  } catch (error) {\n    // sets that the async request is finished\n    yield put({\n      type: USER_ACTIONS.REQUEST_DONE,\n    });\n    yield put({\n      type: USER_ACTIONS.USER_FETCH_FAILED,\n      message: error.data || \"FORBIDDEN\",\n    });\n  }\n}\n/*\n  Starts fetchUser on each dispatched `FETCH_USER` action.\n  Allows concurrent fetches of user.\n*/\n// function* userSaga() {\n//   yield takeEvery('FETCH_USER', fetchUser);\n// }\n\n/*\n  Alternatively you may use takeLatest.\n\n  Does not allow concurrent fetches of user. If \"FETCH_USER\" gets\n  dispatched while a fetch is already pending, that pending fetch is cancelled\n  and only the latest one will be run.\n*/\nfunction* userSaga() {\n  yield takeLatest(USER_ACTIONS.FETCH_USER, fetchUser);\n}\n\nexport default userSaga;\n","import axios from 'axios';\n\n//calls /user on our server to retrieve user data\nexport function callUser() {\n  const config = {\n    headers: { 'Content-Type': 'application/json' },\n    withCredentials: true,\n  };\n\n  return axios.get('api/user', config)\n    .then(response => response.data)\n    .catch((error) => { throw error.response || error; });\n}\n\nexport function placeholder() {\n  console.log('hi');\n}\n","import axios from 'axios';\n\nexport function callLogin(payload) {\n  const body = ({\n    username: payload.username,\n    password: payload.password,\n  });\n\n  const config = {\n    headers: { 'Content-Type': 'application/json' },\n    withCredentials: true,\n  };\n\n  return axios.post('api/user/login', body, config)\n    .then(response => response.data)\n    .catch((error) => {\n      throw error.response || error;\n    });\n}\n\nexport function callLogout() {\n  const config = {\n    headers: { 'Content-Type': 'application/json' },\n    withCredentials: true,\n  };\n\n  return axios.get('api/user/logout', config)\n    .then(response => response.data)\n    .catch((error) => {\n      throw error.response || error;\n    });\n}\n","import { put, takeLatest } from 'redux-saga/effects';\nimport { LOGIN_ACTIONS } from '../actions/loginActions';\nimport { USER_ACTIONS } from '../actions/userActions';\nimport { callLogin, callLogout } from '../requests/loginRequests';\n\n// worker Saga: will be fired on \"LOGIN\" actions\nfunction* loginUser(action) {\n  try {\n    yield put({ type: LOGIN_ACTIONS.CLEAR_LOGIN_ERROR });\n    // sets that we are starting an async request\n    yield put({ type: LOGIN_ACTIONS.REQUEST_START });\n    yield callLogin(action.payload);\n    // sets that the async request is finished\n    yield put({\n      type: LOGIN_ACTIONS.LOGIN_REQUEST_DONE,\n    });\n    yield put({\n      type: USER_ACTIONS.FETCH_USER,\n    });\n  } catch (error) {\n    // sets that the async request is finished\n    yield put({\n      type: LOGIN_ACTIONS.LOGIN_REQUEST_DONE,\n    });\n    if (error.status === 401) {\n      yield put({\n        type: LOGIN_ACTIONS.LOGIN_FAILED,\n        message: error.message,\n      });\n    } else {\n      yield put({\n        type: LOGIN_ACTIONS.LOGIN_FAILED_NO_CODE,\n        message: error.message,\n      });\n    }\n  }\n}\n\n// worker Saga: will be fired on \"LOGOUT\" actions\nfunction* logoutUser(action) {\n  try {\n    yield callLogout(action);\n    yield put({\n      type: USER_ACTIONS.UNSET_USER,\n    });\n  } catch (error) {\n    console.log('LOGOUT FAILED -- CHECK YOUR SERVER', error);\n  }\n}\n\nfunction* loginSaga() {\n  yield takeLatest(LOGIN_ACTIONS.LOGIN, loginUser);\n  yield takeLatest(LOGIN_ACTIONS.LOGOUT, logoutUser);\n}\n\nexport default loginSaga;\n","import { takeEvery, call, put } from 'redux-saga/effects';\nimport Axios from 'axios';\nimport EditSessionDialog from '../../components/SessionsPage/EditSessionDialog';\n\nfunction* getActiveSessions(action) {\n    try {\n        const activeSessionsResponse = yield call(Axios.get, '/sessions/active');\n        const responseAction = {\n            type: 'SET_ACTIVE_SESSIONS',\n            payload: activeSessionsResponse.data\n        }\n        yield console.log('hello');\n        yield put(responseAction);\n    } catch (error) {\n        console.log('set active sessions error: ', error);\n    }\n}\n\nfunction* getCompletedSessions(action) {\n    try {\n        const completedSessionsResponse = yield call(Axios.get, '/sessions/completed');\n        const responseAction = {\n            type: 'SET_COMPLETED_SESSIONS',\n            payload: completedSessionsResponse.data\n        }\n        yield console.log('hello');\n        yield put(responseAction);\n    } catch (error) {\n        console.log('set active sessions error: ', error);\n    }\n}\n\nfunction* postNewSession(action) {\n    try {\n        yield call(Axios.post, '/sessions', action.payload);\n        yield put({type: 'GET_ACTIVE_SESSIONS'});\n    } catch(error) {\n        console.log('post new session error: ', error);\n    }\n}\n\nfunction* endSession(action) {\n    try {\n        yield call(Axios.put, '/sessions', action.payload);\n        yield put({type: 'GET_ACTIVE_SESSIONS'});\n        yield put({type: 'GET_COMPLETED_SESSIONS'});\n    } catch(error) {\n        console.log('end session error: ', error);\n    }\n}\n\nfunction* editSession(action) {\n    try {\n        yield call(Axios.put, '/sessions/edit', action.payload);\n        yield put({type: 'GET_COMPLETED_SESSIONS'});\n    } catch(error) {\n        console.log('edit session error: ', error);\n    }\n}\n\nfunction* sessionsSaga() {\n    yield takeEvery('GET_ACTIVE_SESSIONS', getActiveSessions);\n    yield takeEvery('GET_COMPLETED_SESSIONS', getCompletedSessions);\n    yield takeEvery('POST_NEW_SESSION', postNewSession);\n    yield takeEvery('END_SESSION', endSession);\n    yield takeEvery('EDIT_SESSION', editSession);\n}\n\nexport default sessionsSaga;","import { takeEvery, call, put } from 'redux-saga/effects';\nimport Axios from 'axios';\n\nfunction* getLocations(action) {\n    //this will handle GET requests and pull data from server\n    try {\n        const activeSessionsResponse = yield call(Axios.get, '/locations');\n        const responseAction = {\n            type: 'SET_LOCATIONS',\n            payload: activeSessionsResponse.data\n        }\n        yield put(responseAction);\n    } catch (error) {\n        console.log('set active sessions error: ', error);\n    }//end error handling\n}//end getLocations\n\nfunction* saveLocations(action) {\n    //this handles making POST requests and save data to server\n    console.log('save location with action: ', action.payload);\n    try {\n        yield call(Axios.post, '/locations', action.payload);\n        let actionPayload = {\n            open: true,\n            dispatch: 'GET_LOCATIONS',\n            title: 'Location Added',\n            content: 'Location successfully added!',\n        }\n        yield put({\n            type: 'OPEN_ALERT',\n            payload: actionPayload\n        });\n    } catch (error) {\n        let actionPayload = {\n            open: true,\n            dispatch: 'GET_LOCATIONS',\n            title: 'Error Adding Location',\n            content: 'There was an error adding the location!',\n        }\n        yield put({\n            type: 'OPEN_ALERT',\n            payload: actionPayload\n        });\n    }//end error handling\n}//end saveLocations\n\nfunction* editLocations(action) {\n    //this handles making PUT requests and edit data in the server\n    console.log('edit location with action: ', action);\n    try {\n        yield call(Axios.put, `/locations/edit/${action.payload.id}`, action.payload);\n        let actionPayload = {\n            open: true,\n            dispatch: 'GET_LOCATIONS',\n            title: 'Location Edited',\n            content: 'Location successfully edited!',\n        }\n        yield put({\n            type: 'OPEN_ALERT',\n            payload: actionPayload\n        });\n    } catch (error) {\n        let actionPayload = {\n            open: true,\n            dispatch: 'GET_LOCATIONS',\n            title: 'Error Editing Location',\n            content: 'There was an error editing the location!',\n        }\n        yield put({\n            type: 'OPEN_ALERT',\n            payload: actionPayload\n        });\n    }//end error handling\n}//end editLocations\n\nfunction* toggleLocation(action) {\n    //this handles making PUT request to toggle a location to true/false in the server\n    try {\n        yield call(Axios.put, `/locations/status/${action.payload}`);\n        yield put({ type: 'GET_LOCATIONS' });\n    } catch (error) {\n        console.log('toggle locations error: ', error);\n    }//end error handling\n}//end deactivateLocation\n\nfunction* locationsSaga() {\n    yield takeEvery('GET_LOCATIONS', getLocations);\n    yield takeEvery('SAVE_LOCATIONS', saveLocations);\n    yield takeEvery('MODIFY_LOCATIONS', editLocations);\n    yield takeEvery('TOGGLE_LOCATIONS', toggleLocation);\n}//end locationSaga\n\nexport default locationsSaga;","import { takeEvery, call, put } from 'redux-saga/effects';\nimport Axios from 'axios';\n\nfunction* getGrades() {\n    try {\n        const gradesResponse = yield call(Axios.get, '/grades');\n        const responseActoin = {\n            type: 'SET_GRADES',\n            payload: gradesResponse.data,\n        }\n        yield put(responseActoin);\n    } catch(error) {\n        console.log('get grades error: ', error);\n    }\n}\n\nfunction* gradesSaga() {\n    yield takeEvery('GET_GRADES', getGrades);\n}\n\nexport default gradesSaga;","import { takeEvery, call, put } from 'redux-saga/effects';\nimport Axios from 'axios';\n\nfunction* getSchools(action) {\n    try {\n        const schoolsResponse = yield call(Axios.get, '/schools');\n        const responseAction = {\n            type: 'SET_SCHOOLS',\n            payload: schoolsResponse.data,\n        }\n        yield put(responseAction);\n    } catch (error) {\n        console.log('get schools error: ', error);\n    }\n}\n\nfunction* schoolsSaga() {\n    yield takeEvery('GET_SCHOOLS', getSchools);\n}\n\nexport default schoolsSaga;","import { takeEvery, call, put } from 'redux-saga/effects';\nimport Axios from 'axios';\n\nfunction* getSubjects(action) {\n    try {\n        const subjectsResponse = yield call(Axios.get, '/subjects');\n        const responseAction = {\n            type: 'SET_SUBJECTS',\n            payload: subjectsResponse.data,\n        }\n        yield put(responseAction);\n    } catch (error) {\n        console.log('get subjects error: ', error);\n    }\n}\n\nfunction* subjectsSaga() {\n    yield takeEvery('GET_SUBJECTS', getSubjects);\n}\n\nexport default subjectsSaga;","import { takeEvery, call, put } from 'redux-saga/effects';\nimport Axios from 'axios';\n\nfunction* getTutors(action) {\n    try {\n        const tutorsResponse = yield call (Axios.get, '/tutors');\n        const responseAction = {\n            type: 'SET_TUTORS',\n            payload: tutorsResponse.data,\n        }\n        yield put(responseAction);\n    } catch (error) {\n        console.log('get tutors error: ', error);\n    }\n}\n\nfunction* toggleAdmin(action) {\n    try {\n        yield call(Axios.put, '/tutors/admin', action.payload);\n        yield put({type: 'GET_TUTORS'});\n    } catch (error) {\n        console.log('toggle admin error: ', error);\n    }\n}\n\nfunction* deleteTutor(action) {\n    try {\n        yield call(Axios.put, '/tutors/delete', action.payload);\n    } catch (error) {\n        console.log('delete tutor error: ', error);\n    }\n}\n\nfunction* editTutor(action) {\n    try {\n        yield call(Axios.put, '/tutors/edit', action.payload);\n        let actionPayload = {\n            open: true,\n            dispatch: 'GET_TUTORS',\n            title: 'Tutor Edited',\n            content: 'Tutor successfully edited!',\n        }\n        yield put({\n            type: 'OPEN_ALERT',\n            payload: actionPayload\n        });\n    } catch (error) {\n        let actionPayload = {\n            open: true,\n            dispatch: 'GET_TUTORS',\n            title: 'Error Editing Tutor',\n            content: 'There was an error editing the tutor!',\n        }\n        yield put({\n            type: 'OPEN_ALERT',\n            payload: actionPayload\n        });\n    }\n}\n\nfunction* editTutorSubjects(action) {\n    try {\n        yield call(Axios.put, '/tutors/edit/subjects', action.payload);\n    } catch (error) {\n        console.log('edit tutor subjects error: ', error);\n    }\n}\n\nfunction* editTutorLocations(action) {\n    try {\n        yield call(Axios.put, '/tutors/edit/locations', action.payload);\n    } catch (error) {\n        console.log('edit tutor locations error: ', error);\n    }\n}\n\nfunction* tutorsSaga() {\n    yield takeEvery('GET_TUTORS', getTutors);\n    yield takeEvery('TOGGLE_ADMIN', toggleAdmin);\n    yield takeEvery('DELETE_TUTOR', deleteTutor);\n    yield takeEvery('UPDATE_TUTOR', editTutor);\n    yield takeEvery('EDIT_TUTOR_SUBJECTS', editTutorSubjects);\n    yield takeEvery('EDIT_TUTOR_LOCATIONS', editTutorLocations);\n}\n\nexport default tutorsSaga;","import { all } from 'redux-saga/effects';\nimport userSaga from './userSaga';\nimport loginSaga from './loginSaga';\nimport sessionsSaga from './sessionsSaga';\nimport locationsSaga from './locationsSaga';\nimport gradesSaga from './gradesSaga';\nimport schoolsSaga from './schoolsSaga';\nimport subjectsSaga from './subjectsSaga';\nimport tutorsSaga from './tutorsSaga';\n\nexport default function* rootSaga() {\n  yield all([\n    userSaga(),\n    loginSaga(),\n    sessionsSaga(),\n    locationsSaga(),\n    gradesSaga(),\n    schoolsSaga(),\n    subjectsSaga(),\n    tutorsSaga(),\n    // watchIncrementAsync()\n  ]);\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { createStore, applyMiddleware } from 'redux';\nimport { Provider } from 'react-redux';\nimport createSagaMiddleware from 'redux-saga';\nimport logger from 'redux-logger';\n\nimport reducer from './redux/reducers'; // imports ./redux/reducers/index.js\nimport 'typeface-roboto';\n\nimport 'font-awesome/css/font-awesome.min.css';\nimport 'bootstrap-css-only/css/bootstrap.min.css';\nimport 'mdbreact/dist/css/mdb.css';\n\n\nimport App from './App';\nimport rootSaga from './redux/sagas'; // imports ./redux/sagas/index.js\n\n// Initializing to an empty object, but here is where you could\n// preload your redux state with initial values (from localStorage, perhaps)\nconst preloadedState = {};\nconst middlewares = [];\nconst sagaMiddleware = createSagaMiddleware();\nmiddlewares.push(sagaMiddleware);\n\n// flag to only use the logger if in development mode\nif (process.env.NODE_ENV === 'development') {\n  middlewares.push(logger);\n}\n\nconst store = createStore(\n  reducer,\n  preloadedState,\n  applyMiddleware(...middlewares),\n);\n\nsagaMiddleware.run(rootSaga);\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('react-root'),\n);\n"],"sourceRoot":""}